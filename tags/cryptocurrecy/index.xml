<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>cryptocurrecy on Under The Ginkgo</title>
        <link>https://ginkgo.org.cn/tags/cryptocurrecy/</link>
        <description>Recent content in cryptocurrecy on Under The Ginkgo</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-uk</language>
        <lastBuildDate>Fri, 13 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://ginkgo.org.cn/tags/cryptocurrecy/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>DLC EXAM Preparation Notes</title>
        <link>https://ginkgo.org.cn/posts/dlc_exam_preparation_notes/</link>
        <pubDate>Fri, 13 May 2022 00:00:00 +0000</pubDate>
        
        <guid>https://ginkgo.org.cn/posts/dlc_exam_preparation_notes/</guid>
        <description>&lt;h2 id=&#34;dlc-exam-preparation-notes&#34;&gt;DLC EXAM Preparation Notes&lt;/h2&gt;
&lt;h3 id=&#34;week-4&#34;&gt;Week 4&lt;/h3&gt;
&lt;h4 id=&#34;byzantine-faults-and-cap-theorem&#34;&gt;Byzantine Faults and CAP Theorem&lt;/h4&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Byzantine General Problems 拜占庭将军问题，也是分布式计算中的投票问题&lt;/p&gt;
&lt;p&gt;即当有9位将军协同作战，现在他们遇到了麻烦，需要决定是撤退还是继续进攻，他们通过投票来决定最后的决定，4位进攻，4位撤退，一位背叛者告诉一边他们会进攻，告诉另一边他们会撤退，导致协同作战失败。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;那么Bitcoin是如何解决这个问题的呢，即使用PoW算法，使发送一条虚假的消息的成本变得很高 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Database on ACID&lt;/p&gt;
&lt;p&gt;ACID,即是为了保证数据库的所有业务的办理是可靠的，需要具备的四个特性的缩写 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Atomicity 原子性，即所有的操作都必须完整的进行，如果期间发生错误，即整一个过程全部回滚，当作没有发生过 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Consistency一致性，保证数据库的完整性没有被破坏，所有的操作都需要符合标准 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Isolation隔离性，即防止多个操作处理同一个数据，导致竞争出现混乱 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Durability持久性，所有的处理完成后都可以长期保存，不会丢失和更改 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;那么当数据库变大了之后，这四个特性就会收到挑战。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;CAP Theorem&lt;/p&gt;
&lt;p&gt;CAP为三个对于实现分布式数据库的挑战的简写 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Consistency of data,一致性，所有的节点在访问分布式的数据库时，能够保证访问的都是最新的数据 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Availability of data，可用性，每次请求都能获得不报错的响应（但不保证获取的一定是最新的数据） &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Partition-tolerance，分区容错性，当一致性无法表达的时候，就会产生分歧， &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;根据定力，分布式系统只能保证三项中的两项 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;一般来说，Partition-tolerance必须得到保证，因此只能在Availability和Consistency之间进行选择 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选择Consistency一致性，那么响应的时间可能会变长 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;选择Availability，那么需要保证响应的时间是即时的 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;consensus-protocols&#34;&gt;Consensus Protocols&lt;/h4&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Proof of Work (Pow)&lt;/p&gt;
&lt;p&gt;How it works
: 通过让mining node通过改变block header中的nonce来不断的改变block header hash的值，使其小于block header中target的值 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;后果 &lt;!-- raw HTML omitted --&gt;
-   大量的资源消耗，运行算力机器以及冷却机器所要消耗的电费 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; -   大量的计算群 &amp;lt;br/&amp;gt;

 -   集中的mining power &amp;lt;br/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Proof of Stake (PoS)&lt;/p&gt;
&lt;p&gt;Proof of Stake不需要再向PoW那样消耗大量的算力以及电力资源来互相竞争，永远要记住一点的就是mining的过程本身不是为了加密货币，而是为了维持整一个区块链上的安全。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;比如以太坊，他们要求想要成为 validator 的用户抵押一部分的虚拟货币，然后随机选择一名validator来进行新的block的创造以及transaction的验证，你抵押的越多，也就越容易成为validator。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;那么如何避免用户的不良行为呢，PoW通过大量的运算提高了成本，而PoS中，则是使用抵押的机制来防止产生不良的行为，如果发生了他们就丧失他们抵押的虚拟货币 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;在PoS中，人们会倾向与合作，而不是PoW中的竞争，他们可以将资源集中起来，从而获得更大的机会来成为validator &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;在PoS中，51% attack对于attacker来说也十分危险，因为他们需要抵押大量的货币来得到validator的地位，那么一旦遭受惩罚，损失将会是巨大的 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Proof of Authority&lt;/p&gt;
&lt;p&gt;Block的创建以及transaction的校验工作被轮流分配到可信的权威机构或者组织身上，这些组织可能需要抵押一部分的资金来成为可靠的节点，进入轮值列表 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Other turn-taking protocols&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Protocol来直接决定那个节点来完成工作 &lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;随机分配 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;轮流 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Proof of Elapsed Time (PoET) hardware: &lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;只有特定的硬件才能完成工作 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;consensus-attacks&#34;&gt;Consensus attacks&lt;/h4&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Sybil attacks&lt;/p&gt;
&lt;p&gt;女巫攻击，攻击者通过利用proxy代理来伪造多个身份来对整一个decentralised consensus机制进行攻击，但同样也需要大量的hash power，因为即使你控制了很多节点，那也需要能够在这些节点上面来完成PoW才行 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;week-8-dlt-infrastructure-and-platforms&#34;&gt;Week 8: DLT Infrastructure &amp;amp; Platforms&lt;/h3&gt;
&lt;p&gt;Bitcoin blockchain最主要的目的是为了防住double-spending（通过增加修改一个block所需要的cost，特别是当多个block都确认信息之后） &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h4 id=&#34;ethereum&#34;&gt;Ethereum&lt;/h4&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;What is Ethereum&lt;/p&gt;
&lt;p&gt;在Ethereum宇宙中，有一个唯一的虚拟的机器叫做EVM（Ethereum Virtual Machine）,所有参与Ethereum网络的用户都认可的一个机器，用来记录整个网络包括用户的状态。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;EVM类似于bitcoin中每一个full node所存储的database，当有transaction产生之后，将会被广播到整一个Ehthereum网络当中，被验证并加入的新的block当中，然后作为一条指令被EVM做执行，所有的node上都有一份完整的EVM的拷贝，每一条transaction都相当于是对EVM这个机器发出的指令，让其进行一些操作造成状态的改变。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;global computers &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;What is Ether&lt;/p&gt;
&lt;p&gt;Ether就是Ethereum中的所使用的cryptocurrency，其作用是为了激励miner积极的转发，验证transaction，来维护整个一个blockchain，同时也可以防止发生DDoS攻击，因为每个transaction都需要支付一定的费用。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;What is Smart contracts&lt;/p&gt;
&lt;p&gt;Smart contracts 智能合约，本质上是一个个在EVM上的程序（一组代码指令），用户可以通过发送对应的变量参数同时支付一定的Eth来发起一个transaction，而一个miner讲在其本地的EVM上的所对应的smart contract程序上输入参数执行这个程序，完成相应的工作。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;程序员通过向EVM中上传这些开发的智能合约程序，就可以在EVM的基础上搭建应用程序供用户调用使用。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;同时也被叫做dapps, or Decentralised Apps. &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Transaction&lt;/p&gt;
&lt;p&gt;Ethereum中的transaction是丰富多样的，例如： &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Send X ether from my account to Alice&amp;rsquo;s account. &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Publish some smart contract code into EVM state. &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Execute the code of the smart contract at address X in the EVM, with arguments Y. &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;GAS&lt;/p&gt;
&lt;p&gt;GAS，汽油，顾名思义，是用来驱动Ethereum工作的一个东西。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;我们从上面的介绍中了解，用户可以发起 transaction 来转移ETH,也可以发送对应的参数来执行smart contracts,那么这些工作都需要消耗计算机资源，那么GAS就作为费用来驱动计算机资源为用户服务， &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;GAS cost
:&lt;/p&gt;
&lt;p&gt;你需要执行多大的smart contracts程序 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;你需要执行的速度有多快 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Gas price (measure in ETH) &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;用户在发起transaction的时候可以决定想要花费多少GAS来作为报酬 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Total processing fee in ETH = &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Gas limit (total # of gas to be used) X gas price in ETH. &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Transaction的执行具有Atomicity原子性（我觉得是这样），即如果transaction的执行失败了，或者未完成，gas不会退回，因为确实已经占用了计算机资源，但是EVM的状态不会发生任何改变。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Why have Ethereum Gas?&lt;/p&gt;
&lt;p&gt;可以用于减少infinite loops 以及防止DoS attack的发生， &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;因为最终支付的有限的Gas将被用完，并且attacker需要付出gas才能继续工作 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Cryptokitties problem&lt;/p&gt;
&lt;p&gt;Cryptokitties刚出来的时候，大量的transaction突然涌入整一个Ethereum，Miners提高了他们的gas几个，导致很多老的用户还在自动的支付较低的gas，导致很多transaction并不会被处理与执行 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;解决的方法： &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;短期：修改前端页面来允许用户增加他们的gas费用并重新提交transaction &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;长期：将类似的app转移到sidechains来执行，即只有一部分人可以执行和运行特定的transaction，而不会影响主链上的nodes &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Ethereum Enterprise&lt;/p&gt;
&lt;p&gt;企业和组织可以在Ethereum上开辟permissioned chains来实现自己的一个blockchain，他们会重新开发EVM的code来接收和转发特定的transaction，这些transaction与主链上的node并不兼容，但是却可以在特定的一些参与到这个sidechain上的node之间进行交互 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;corda&#34;&gt;Corda&lt;/h4&gt;
&lt;p&gt;designed for private transactions &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;enterprise version is called R3 Corda. &lt;!-- raw HTML omitted --&gt;
Design &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Consensus &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;只有参与本次transaction的机构才能看到和参与这个transaction &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Validation &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;只有合法的利益相关者才会进行transaction的验证 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use of Independent notaries &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;独立的第三方公证处会帮助完成时间的验证（什么时候做出的交易），以及防止transaction发生两次 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Focus on inter-operability &lt;!-- raw HTML omitted --&gt;
确保法律条文能够绑定，以及老旧的内部系统能够参与合作 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Corda的特性&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Transactions private to the parties involved &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;– Witnessed by notaries 只有公证处才能看得到 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;– Only participants to a transaction can view it 只有参与transaction的组织才能知道transaction的存在与参与其中 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;No single chain &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;No global state &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;No native crypto-currency &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Records an explicit link between legal code and smart contracts &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Supports a variety of consensus mechanisms &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Can include transaction within arbitrary workflows. &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Corda中也没有block的概念，所有的transaction都是实时处理的，意味着不需要等待block被添加才能被确认， &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;金融机构对Corda感兴趣的主要原因就是可以自动化繁琐的工作流，比如学校的注册，就需要一系列的工作流，他们如果能被自动化，并记录在blockchain上面，就会方便很多。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.r3.com/blockchain-101/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.r3.com/blockchain-101/&lt;/a&gt; &lt;!-- raw HTML omitted --&gt;
Peers have a single shared ledger — once the transaction is validated, the record is permanent, secure and immutable. &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;A smart contract — code running on top of a blockchain that contains a set of rules under which the parties mutually agree — eliminates the need for third parties. &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Owner of the transaction has the power to move anything of value freely and instantly without intermediaries. &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Eliminates or reduces paper processes, need for intermediaries, speeds up transaction times and increases efficiencies and transparency. &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;hyperledger&#34;&gt;Hyperledger&lt;/h4&gt;
&lt;p&gt;a family of platforms &lt;!-- raw HTML omitted --&gt;
作为基础设施，然后加入的组织可以在其基础设施上搭建自己的服务 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Different large IT companies, financial institutions join the Hyperledger as members and run a family of platforms &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;用户可以选择加入这些platforms也可以寻求这些组织提供服务 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h4 id=&#34;other-technologies&#34;&gt;Other technologies&lt;/h4&gt;
&lt;p&gt;一个常见的批评的声音就是：你实际上不需要一个分布式账本平台，因为使用集中式的数据库一样可以存储隐私信息 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;但是这仍然面临很多的威胁： &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第三方数据库的安全性，以及价格的支出 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;如何保证数据库不被攻击或者被第三方数据库所利用？ &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;禁止合作伙伴持有竞争对手的数据 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;因此每一个企业都需要将数据存储在第三方的数据库中 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;week-9-smart-contracts&#34;&gt;Week 9: Smart Contracts&lt;/h3&gt;
&lt;p&gt;当我们在自动贩卖机买饮料的时候，我们投入硬币，然后选择想要的饮料，然后饮料掉出来，这其实完成了一个隐性的合约，就是你付出了一定的钱，机器把对应的商品交付给你，这个工作由自动贩卖机完成，而不需要再签署一份合同，来进行交付。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Smart contracts,智能合约就是为了实现这样一个概念，但是就如同Mining挖矿的目的是为了维护去中心化的共识机制的安全一样，smart contracts并不是严格意义上的合同，它的本质上运行在分布式账本上的一个程序，能够自动的接受参数然后进行运行 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Bitcoin的script其实就是一个很基础的智能合约，transaction中的locking script &amp;amp; unlocking script合在一起就可以实现UTXO的花费，但是由于Bitcoin本身设计的限制，script没有很强大的功能，不能循环或者递归，是图灵不完备的。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;那么如果我们设计一个更为强大的计算机语言，使其图灵完备，那么是不是就能完成更有创造性的功能呢，这也就是Ethereum的出现以及Solidity语言的实现。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;每一个smart contract程序在运行的时候都可以在分布式账本上修改其特定的数据，可供使用的数据当然也有一系列的限制。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h4 id=&#34;smart-contract-and-trust&#34;&gt;Smart contract and trust&lt;/h4&gt;
&lt;p&gt;我们可以说，smart contract程序（相较于普通的程序）将信任加入了系统，因为所有的代码都存在于整一个分布式账本上，并且所有的操作都会被所有的节点独立的验证，并且会永久被保存，理论上无法被修改。同时这些操作将会被自动执行。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h4 id=&#34;关于名字&#34;&gt;关于名字&lt;/h4&gt;
&lt;p&gt;其实智能合约并不智能，他们只是一组代码可以被自动执行，仅此而已（我们说的智能一般会联系到AI之类的方向） &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;其实智能合约不是传统意义上的合约，可能只是一次简单的加密货币的交易，如果需要加上法律条文，需要额外的服务，并且也不一定是两个组织为了达成某些交易而诞生的合同。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h4 id=&#34;what-are-agreements-in-the-context-of-distributed-ledgers&#34;&gt;What are agreements in the context of distributed ledgers?&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;法律合同（人们能够读得懂的） &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;隐性的合同（自动调用的计算机操作，protcols之类的） &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;stampery-servie&#34;&gt;Stampery servie&lt;/h4&gt;
&lt;p&gt;Stampery是一项可以提供合同证明服务，即合同是否达成，在何时达成？ &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;举个例子，比如你与房东达成了租房合同，然后你们各有一份经过签字的合同，你可以通过Stampery服务来将其上传到分布式账本中进行保存： &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先他们会hash这份电子的合同 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;然后将这个hash值与其他需要的hash一起组成称merkle tree &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;接着上传到一个或多个分布式账本中 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;那么当你未来需要验证自己的合同没有经过修改的话就可以： &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;重新用同样的算法hash你自己的文件 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;然后与分布式账本上的hash进行匹配就可以验证了（可信的是分布式账本） &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;ricardian-contracts-link-legal-agreements-to-code&#34;&gt;Ricardian Contracts: link legal agreements to code&lt;/h4&gt;
&lt;p&gt;可以将有法律效应的文件转换成电脑系统可以处理的形式，同时又可以轻松的转换回来供法律人士阅读和使用。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;所有的参与者都会电子的给合同签名，同时使用hash算法将文件电子的保存在blockchain上，供以将来使用 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-05-14_22-11-25_screenshot.png&#34; width=&#34;700px&#34;/&gt;
&lt;/figure&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Barclay银行第一次采用了这个Ricardian contract与blockchain（corda）的结合 &lt;!-- raw HTML omitted --&gt;
&lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=YIH4MJf6kH8&amp;amp;t=237s&amp;amp;ab_channel=Rise%2CcreatedbyBarclays&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.youtube.com/watch?v=YIH4MJf6kH8&amp;t=237s&amp;ab_channel=Rise%2CcreatedbyBarclays&lt;/a&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;他们实现了一个prototype，可以将签合同的时候所需要的法律文件转换为电子版的，然后就交易的双方以及其中的细节进行简单的填充，就可以快速生成双份的具有法律效应的合同，之后再上传到corda的blockchain之上，保证了其不可被修改的性质 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;还是之前那个租房合同的例子，现在我们很多的合同还是要求要用手写签名为证，但是有了这样的smart contract program，我们就可以更为方便的生成合同，并永久的保存，且将合同保存在可以信任的平台上，方便再次追溯。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-05-14_22-43-56_screenshot.png&#34; width=&#34;700px&#34;/&gt;
&lt;/figure&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h4 id=&#34;agreements-using-smart-contracts&#34;&gt;Agreements using smart contracts&lt;/h4&gt;
&lt;p&gt;智能合约如果是放在permissioned账本上的话，那么只会被参与的几个用户有权利查看 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;并且就像之前提到过的那样，一旦智能合约开始执行，那么一切的后果都必须要接受，也就是说这一切都是建立在你已经完全掌握了智能合约要做的事情以及将会发生的后果，一旦上传到分布式账本之后，一切都不会改变了 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;智能合约的方法分为两种： &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Getters，获取变量 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Setters，通过得到的变量来更改EVM的状态 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;往往这些智能合约程序会设定自动的函数来自动提醒相关人员一旦状态发生了任何改变 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h4 id=&#34;smart-contract-languages&#34;&gt;Smart Contract Languages&lt;/h4&gt;
&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-05-14_23-25-41_screenshot.png&#34; width=&#34;700px&#34;/&gt;
&lt;/figure&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h4 id=&#34;总结&#34;&gt;总结&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;智能合约就是分布式账本上自动运行的程序 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;每一个智能合约程序都会在P2P网络中的每一个full node上被执行 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;其结果就是改变每一个full node上的virtual machine &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;智能合约可以或者不用代表多个团体之间的达成的合同 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;有些只是开发者所开发的应用程序 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;每一个节点都会运行，但是可能会在不同的时间完成 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;这也就是为什么所有智能合约程序的输入参数只能在blockchain内部获取，因为如果在外部获取，万一出现问题，那么不同的node上的virtual machine的结果不同，就会破坏整一个blockchain &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;不同使用随机数，一切都是确定的，要保证所有的EVM都是相同的 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;lecture-10-some-case-studies&#34;&gt;Lecture 10: Some Case Studies&lt;/h3&gt;
&lt;h4 id=&#34;shared-databases&#34;&gt;Shared Databases&lt;/h4&gt;
&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-05-15_10-44-58_screenshot.png&#34; width=&#34;700px&#34;/&gt;
&lt;/figure&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h4 id=&#34;what-are-main-benefits-of-dlt&#34;&gt;What are main benefits of DLT&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;状态共享 Shared State &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;不同的企业需要共享相同的数据，那么DLT可以可以建立一个多方都可以信任的平台，平切在所有的节点上的数据都是相同的 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Stateful(history kept) 状态是实时更新的 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;keep track the state &lt;!-- raw HTML omitted --&gt;
所有的状态噶遍都需要经过所有节点的验证，认可，以及记录 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Stored data is effectively immutable 存储的数据几乎不可能被改变 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;数据被存储在所有的节点上，特别是在PoW的blockchain上，如果想要修改数据，需要所有的node都同意，并且花费大量的资源 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Unique allocations &amp;amp; co-ordinated allocation &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;解决double-spend problem, 每一条transaction都会被所有的节点记录，并且不断被之后的block所记录，double-spend需要颠覆这些很难 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Witnessing &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Multi-party aggregation，permissioned至少需要三个团体，其中一个作为监督 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Immediate settlement for digital assets &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;change of custody都会被记录 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-05-15_10-52-36_screenshot.png&#34; width=&#34;700px&#34;/&gt;
&lt;/figure&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h4 id=&#34;nft&#34;&gt;NFT&lt;/h4&gt;
&lt;h3 id=&#34;lecture-5-money-and-e-money&#34;&gt;Lecture 5: Money and e-Money&lt;/h3&gt;
&lt;p&gt;Money在现代有两种基本的形式 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;硬币 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;纸钞 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;同样还有 &lt;!-- raw HTML omitted --&gt;
旅行支票 &lt;!-- raw HTML omitted --&gt;
银行活期存款 &lt;!-- raw HTML omitted --&gt;
储蓄存款 &lt;!-- raw HTML omitted --&gt;
定期存款（24小时年） &lt;!-- raw HTML omitted --&gt;
货币市场存款（商业借贷) &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h4 id=&#34;money在英国的合法解释&#34;&gt;Money在英国的合法解释&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Top-Down 自上而下： &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;政府说什么是钱，什么就是钱 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Legal Tender法定货币 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;fiat money 法定货币 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Bottom-Up 自下而上： &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;老百姓说什么是钱，什么就是钱 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Promissory notes从18实际中期开始流行，在19世纪被英国法院所接受 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;money的种类&#34;&gt;Money的种类&lt;/h4&gt;
&lt;dl&gt;
&lt;dt&gt;Commodity money 商品货币&lt;/dt&gt;
&lt;dd&gt;&lt;ul&gt;
&lt;li&gt;其价值来源于制造材料本身的价值 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;通常是金属(金银铜) &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Yap Rai stones &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;dl&gt;
&lt;dt&gt;Representative Money 代表性货币&lt;/dt&gt;
&lt;dd&gt;&lt;ul&gt;
&lt;li&gt;价值来源于其所代表的基础商品的国币 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;对商品的要求：金本位 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;dt&gt;Fiat Money 法定货币&lt;/dt&gt;
&lt;dd&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;没有任何内在价值的货币，也没有基础商品 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;其价值来源于用户的认可 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;也可以说是老百姓认同了政府颁发的Top-Down自上而下的货币 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;h4 id=&#34;money的主要功能&#34;&gt;Money的主要功能&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;作为交易的终结 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;减少了以物换物的麻烦 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用于商品衡量机制的标准，也是记账的单位 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;价值的存储 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果没有通货膨胀的话，可以一直保持价值 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;作为匿名支付的手段 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;作为延迟交付的手段 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;money的次要功能&#34;&gt;Money的次要功能&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;可变性 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;纸币/硬币是可以互换的 &lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;不像（比如）钻石或稀有邮票 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可携带性 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不像房屋或土地那样 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;耐用性 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;纸质钞票与塑料钞票 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;比如说。澳大利亚的第一张聚合物美元纸币。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可分割性 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;与牛不同 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可验证性 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;需要验证真实性 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用水印、全息图 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;储存性 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;与牛不同（牛最终会死）。 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;不容易伪造 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用水印、全息图。 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;什么是money的价值&#34;&gt;什么是Money的价值&lt;/h4&gt;
&lt;p&gt;在法定货币中，其价值取决于人民是否愿意接受其作为支付手段 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;主要是由人民的态度决定 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;由什么政府颁发的 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;对其货币政策的态度 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在通货膨胀或者通货紧缩之下，人民会做出响应的动作来表达他们对于货币价值的态度： &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在高通货膨胀率下，做债务人比做债权人更好 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;借钱而不是放钱 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;他们可能试图将储蓄转化为其他资产。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;货币的流通性&#34;&gt;货币的流通性&lt;/h4&gt;
&lt;p&gt;Liquidity refers to the speed &amp;amp; ease with which an asset can be turned into cash without lowering its price &lt;!-- raw HTML omitted --&gt;
流动性指的是如何将实际资产与现金之间的转换速度以及难易程度（在不影响价格的情况下） &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;现金的流通性是最好的 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;贵金属也还可以 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;虚拟货币的流通性也还不错 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;但是房子或者其他实际的资产的流通性就很差，因为不是所有人都想要这个资产，同时，他们的价值也还需要评估 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;money在金融中的定义&#34;&gt;Money在金融中的定义&lt;/h4&gt;
&lt;p&gt;MØ = 流通中的硬币和纸币 + 银行储备基金（英国）（称为狭义货币） &lt;!-- raw HTML omitted --&gt;
MB = MØ + 银行金库中的硬币和纸币（称为货币基础） &lt;!-- raw HTML omitted --&gt;
M1 = 流通中或金库中的硬币和纸币 + 旅行支票 + 活期存款 + 其他可支票存款 &lt;!-- raw HTML omitted --&gt;
M2 = M1 + 储蓄存款 + 10万美元以下定期存款 &lt;!-- raw HTML omitted --&gt;
M3 = M2 + 货币市场基金 + 较长期的存款 &lt;!-- raw HTML omitted --&gt;
MZM = M3 + 所有货币市场基金。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h4 id=&#34;发放money&#34;&gt;发放Money&lt;/h4&gt;
&lt;p&gt;在大多数国家只有由政府控制的中心银行才有资格发放货币 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;具体如何发放呢： &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;铸造硬币 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;印刷纸币 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将电子存款存入商业银行的账户 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;进入商业银行的Nostro账户 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用抵押品（例如，银行拥有的土地、建筑物）作担保 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;然后，银行可以把这些钱借出。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;货币政策&#34;&gt;货币政策&lt;/h4&gt;
&lt;p&gt;大多数的银行都有明确的目标，例如 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将通货膨胀保持在一个稳定的标准 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;扩大就业（让银行中的钱贬值，人们才会愿意去赚钱） &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;缓和长期利率 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为了实现这些目标，他们可以通过影响货币的数量来达到这个目的： &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过发行货币 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;通过要求商业银行在中央银行存放安全资金（&amp;ldquo;储备金&amp;rdquo;）。 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;通过设定基本利率（&amp;ldquo;基准利率&amp;rdquo;）（英国：0.50%）。 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;通过将电子货币存入商业银行的银行账户（&amp;ldquo;量化宽松&amp;rdquo;）。 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;通过公开市场操作（OMO） &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;购买和出售债券 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;从而从经济中释放或提取资金。 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;对于货币政策的信息共享&#34;&gt;对于货币政策的信息共享&lt;/h4&gt;
&lt;p&gt;政府一般会对于信息的共享非常小心，因为一个普通的消息，很容易造成民众的过度解读与过度反应，进而引起恐慌 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h4 id=&#34;inflation-and-hyperinflation-通货膨胀和恶性通货膨胀&#34;&gt;Inflation and Hyperinflation 通货膨胀和恶性通货膨胀&lt;/h4&gt;
&lt;p&gt;如果银行发行过多的货币（或使贷款过于容易），那么 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;可用的货币多于要购买的商品（至少在短期内）。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;商品的价格上升（因为对它们的需求超过了供应）。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;商品的平均价格上升，因此我们得到了通货膨胀 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;每单位时间内的价格上涨率。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通货膨胀的水平没有上限 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;恶性通货膨胀:当通货膨胀率每月超过50%。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h4 id=&#34;加密货币的作用&#34;&gt;加密货币的作用&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;交易媒介 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;价值的衡量标准与记账单位 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;价值的存储 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;匿名支付 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;延期支付 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;但是，加密货币的稳定性与其对现实世界商品以及服务的购买和卖出的关系成反比 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;作为一种存储媒介，加密货币对跨国转移资产的人来说可能特别有价值 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h4 id=&#34;加密货币的用户&#34;&gt;加密货币的用户&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;犯罪者，洗钱 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;逃避国际制裁的政府和人民 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;处于资产出口管制，恶性通货膨胀或者高度腐败的国家的人民 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;任何有使用货币合法/不合法需求的人 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;投资者 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;加密货币在2017年的增长&#34;&gt;加密货币在2017年的增长&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;不合法交易的增加 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;ICO &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;大众行为 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;herd-behaviours-从众行为&#34;&gt;Herd behaviours 从众行为&lt;/h4&gt;
&lt;p&gt;人们会倾向于模仿别人 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Pump &amp;amp; dump scams &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;抽水和倾倒骗局&lt;/dt&gt;
&lt;dd&gt;&lt;ul&gt;
&lt;li&gt;诈骗者购买股票（或加密货币）并向其他人推销。 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;当其他人买入时，价格上升 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;诈骗者以高于他/她支付的价格卖出 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;dt&gt;庞氏骗局&lt;/dt&gt;
&lt;dd&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;骗子招揽投资基金，承诺快速和高额回报 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;早期投资者从后期投资者的投资中获得回报 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;由于世界人口是有限的，这样的骗局总要结束。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;h4 id=&#34;泡沫经济-bubbles&#34;&gt;泡沫经济 Bubbles&lt;/h4&gt;
&lt;p&gt;泡沫经济，指资产价值超越实体经济，极易丧失持续发展能力的宏观经济状态。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;泡沫经济经常由大量投机活动支撑，本质就是贪婪。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;由于缺乏实体经济的支撑，因此其资产犹如泡沫一般容易破裂，因此经济学上称之为“泡沫经济”。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;新兴产业处于早期的时候，人们开始炒作商品，赋予其过高的价值 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;一旦投机者丧失了投机的欲望，开始撤出他们的资金，那么被哄抬的商品价格机会面临大量的下降，最终导致泡沫破裂，手中的泡沫不值钱了，贷款却还还不清 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h4 id=&#34;虚拟货币的价值&#34;&gt;虚拟货币的价值&lt;/h4&gt;
&lt;p&gt;需要考虑的方面 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;供应方&lt;/dt&gt;
&lt;dd&gt;&lt;ul&gt;
&lt;li&gt;供应量是否固定 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;比如比特币的发行总量目前是由上上限 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;dt&gt;需求方&lt;/dt&gt;
&lt;dd&gt;是否有一个会产生需求的基础应用？ &lt;!-- raw HTML omitted --&gt;
&lt;p&gt;如果有一个基础应用，需求可能是什么？ &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在短期和长期内 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;是否有类似或竞争的代币？ &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;是否有来自投资者的需求（或可能有）？ &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;供应和需求之间的平衡？ &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;供应和需求是如何匹配的？ &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;其他类似加密货币的价格是多少？ &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;h3 id=&#34;lecture-7-icos-and-tges&#34;&gt;Lecture 7: ICOs and TGEs&lt;/h3&gt;
&lt;h4 id=&#34;raising-funds&#34;&gt;Raising Funds&lt;/h4&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;创业公司如何收集资金&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;FF&amp;amp;F: 创始人，朋友和家人 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;天使投资人 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;政府拨款或者贷款 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;商业贷款（银行） &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;风险投资公司 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;IPO：当公司在正确交易所上市的时候，就可以通过出售股份来募集资金 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;寻找贷款或者投资人&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;发布招股说明书 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;一份包含机会，terms and conditions (T&amp;amp;C) 以及风险的文档 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;传统的借贷形式 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;存储者将钱存入银行，信用社 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;银行用这些钱向个人或者公司提供大额贷款 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;众筹资金 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;通过众筹服务以及网站募集资金 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通过大数量的投资者投资的小额资金 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;P2P贷款 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ICO &lt;!-- raw HTML omitted --&gt;
预先出售代币 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;icos-and-tges&#34;&gt;ICOs and TGEs&lt;/h4&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;什么是ICO？&lt;/p&gt;
&lt;p&gt;ICO是一种募集资金的方法 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;举一个例子，比如我们将要开设一条新的航线，那么建设航线需要时间与资金，我们通过发放crypto token代币来交换投资者的资金支持 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;投资者通过支持资金，就会获得一定量的代币 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;在项目结束之后，他们就可以进行对代币的贸易 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Why invest? &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;– Business or utility reason &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;– Investment reasons &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;• to hold tokens and resell them later 持有代币并在日后转售（投资然后获得回报） &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;– Speculation reasons &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;• to buy and sell tokens. 购买和出售代币（用来获取代币） &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-05-15_17-42-31_screenshot.png&#34; width=&#34;700px&#34;/&gt;
    &lt;/figure&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Token standards: ERC&lt;/p&gt;
&lt;p&gt;Ethereum Request for Comment &lt;!-- raw HTML omitted --&gt;
任何人都可以计入并提供他们的想法，然后让其他人讨论并投入资金 &lt;!-- raw HTML omitted --&gt;
这个协议可以让代币的互动更加方便，通过与以太坊网络的交互 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;ERC721: The Ethereum standard for Non-Fungible Tokens (NFTs)&lt;/p&gt;
&lt;p&gt;ERC721中token被用来表示一样unique特有的物品，使其无法被代替 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;最早的NTF就是CryptoKitties &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;监管机构&lt;/p&gt;
&lt;p&gt;防止诈骗 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;要求所有的募集资金的人了解这些投资者： &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;发起人的过去记录 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;公司的真正计划和意图 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;法律和监管状况 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;内幕交易和关系 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;风险 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来防止来自于各种方面的风险： &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;市场需求 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;竞争者 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;监管风险 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;技术发展。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Accredited investors 受到认可的投资者&lt;/p&gt;
&lt;p&gt;大多数金融业监管机构更关注普通消费者和投资者的风险 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;较少关注对以下人群的风险 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;高净值个人（财富超过10万美元的人）。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;私人投资池 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一些机构专有的认可投资者的范围： &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对这些投资者和他们加入的投资池的监管和监督较少 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;对冲基金&amp;ndash;使用高风险策略的认可投资者的资金池。 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Cryptocurrency Hedge Funds 加密货币对冲基金&lt;/p&gt;
&lt;p&gt;集合投资基金，目标是投资于。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;加密货币和替代币 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;ICOs &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;在区块链上运行的初创企业 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通常由传统对冲基金的合作伙伴和投资者创建 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;加密货币对传统投资者来说太不稳定了 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Checks on investors 对投资者的审查&lt;/p&gt;
&lt;p&gt;对投资者的审查主要是为了通过了解投资人的信息以防止洗钱以及其他投资背后的违法行为 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;KYC – Know Your Customer regulations
: – Identity &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; – Location &amp;lt;br/&amp;gt;

 – Wealth &amp;amp;amp; assets &amp;lt;br/&amp;gt;

 – Other investments &amp;lt;br/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;AML – Anti-Money Laundering regulations
:&lt;/p&gt;
&lt;p&gt;– What are the source(s) of funds? 钱从哪儿来的 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Money-laundering
:&lt;/p&gt;
&lt;p&gt;目标： &lt;!-- raw HTML omitted --&gt;
– Proceeds of criminal activity (often in cash) 犯罪活动的收益 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;– Proceeds of transactions with entities under sanctions 与受制裁的目标进行交易所得利益 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Registration of security 证券注册&lt;/p&gt;
&lt;p&gt;需要向美国证券交易委员会注册证券（除非获得豁免），并提供以下细节。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;公司的属性和商业目的 &lt;!-- raw HTML omitted --&gt;
所提供的证券 &lt;!-- raw HTML omitted --&gt;
公司的管理层 &lt;!-- raw HTML omitted --&gt;
由独立会计师认证的财务报表。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Howey Test&lt;/p&gt;
&lt;p&gt;Howey测试是用来鉴定一份证券投资合同是否为合法的，需要满足以下四个条件 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;它是金钱的投资 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;金钱 &amp;ldquo;可能包括其他形式的近似金钱 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;金钱的投资 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;存在对投资利润的预期 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;想要赚钱的 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;资金的投资是在一个共同的企业中 &lt;!-- raw HTML omitted --&gt;
&amp;ndash;将资金汇集到一个股份公司或类似的联合企业中去 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;任何利润都来自于发起人或第三方的努力 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果利润来自于投资者自己的行为，那么可能就不是证券。 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;对于有意向的ICO，大致有3种选择&lt;/p&gt;
&lt;p&gt;选择1（重度监管） &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;将代币作为证券在美国SEC注册 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;约50万美元的法律费用 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;4-6个月的过程 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;方案2（轻度监管） &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;不向美国公民或居民出售，以获得美国证券交易委员会的豁免。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;同样地，不向中国或韩国居民出售（获得当地委员会的和面）。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;约5-10万美元的法律费用，2-3个月 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;需要收集KYC和反洗钱信息 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;与Cypher-punk的精神背道而驰 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;选项3（无法规） &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;无视这些法规 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;有被监管机构起诉和/或被投资人起诉的风险 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;需要找个好律师 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;ICO的发起的阶段&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;私人代币分配 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;给朋友和员工 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;私人代币分配 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通常是给大型投资者和加密对冲基金 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;公开代币分配 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;给任何人（也许受限制）。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;例如，不提供给美国、中国或韩国的公民或居民 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在白皮书和招股说明书的基础上筹集资金 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;平台的开发 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;并创建代币 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;启动业务 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;和代币的使用。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;ICOs - 一个典型的组织结构&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;一个慈善基金会（F）发起ICO并接收资金 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;拥有独立的董事会 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一家软件开发公司（D）开发理念和白皮书 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当筹集到资金时，部分资金由F分配给D以建立平台。 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;地点 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;基金会通常在有利于监管的司法管辖区注册 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;例如，瑞士、直布罗陀、新加坡。 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;软件公司在其他地方注册 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;例如，英国，美国。 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;雇员可能在任何地方。 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;潜在的治理问题 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;基金会（F）和软件公司（D）之间的关系是什么？ &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果发生纠纷，管辖权在哪里？ &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;代币持有者对软件有权利吗？ &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;代币分配机制&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在公开销售中使用各种分配机制来分配代币 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通常是拍卖，将代币授予出价最高的人 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;基本关注代币（BATCoin）ICO &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;2017年5月：在30秒内筹集了3500万美元的资金 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;只有130名投资者 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;前20个地址控制了50%以上的代币 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Bancor ICO &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;2017年6月12日 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;3小时内筹集了1.53亿美元（以太币）的资金 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;比计划多出5100万美元 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;批评 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;对内部人士的偏爱 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;速度 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;没有给代币总量设置上限。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;case-studies&#34;&gt;Case Studies&lt;/h4&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Ethereum&lt;/p&gt;
&lt;p&gt;以太坊 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;2013: Vitalik Buterin的白皮书 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;建议在区块链上实现完全的编程能力（Solidity） &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2014年7-8月进行ICO &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在当时的ICO中排名第六 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;筹集了1840万美元 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;以固定价格递减的BTC进行支付 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2000 ETH / BTC降至1337 ETH / BTC &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;31.5K BTC或6000万ETH &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;DAO&lt;/p&gt;
&lt;p&gt;Decentralized Autonomous Organization &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;DAO &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;去中心化的自治组织 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在以太坊上运行的自营风险投资基金 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在1个月内（2016年5月）从11000名投资者那里筹集了1.5亿美元的资金 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;打算让代币持有人对投资建议进行投票 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2016年6月。代码漏洞被利用 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;5000万美元被抽走 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;投资者的风险 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;由于设计（或测试）不当的代码造成的资金损失 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以太坊节点投票决定硬分叉以恢复损失的资金 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;2016年7月20日在区块1,920,000处 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;现在有2个分支。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;以太坊（区块链排除了损失） &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;以太坊classic（漏洞仍然存在）。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Tezos&lt;/p&gt;
&lt;p&gt;一个去中心化的区块链，以促进代码的正式验证，以及智能合约。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;发起人和s/w开发者。阿瑟-布莱特曼和凯瑟琳-布莱特曼（美国） &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tezos基金会（瑞士）。Johann Gevers &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2017年7月的ICO &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;筹集了2.32亿美元的ETH和BTC &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;布雷特曼夫妇与基金会之间存在分歧 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;两人之间的律师函 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;推迟开发和推出代币的时间 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;谁来做系统/软件开发？ &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;投资者对延迟的不满 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;投资者提出集体诉讼的风险。 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Polkadot 2017&lt;/p&gt;
&lt;p&gt;目标 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将私人区块链和公共区块链联系在一起 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;推动者 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Gavin Wood（前以太坊CTO） &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Jutta Steiner（前以太坊）。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Parity软件公司 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Parity软件公司（英国） &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Web 3.0基金会（柏林） &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2017年10月进行ICO，募集资金。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;私人销售：8300万美元的瑞士法郎 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;公开销售：1.4亿美元的以太币和比特币 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;拍卖过程是降价拍卖（荷兰拍卖）。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Polkadot: 多签名钱包的问题&lt;/p&gt;
&lt;p&gt;支付到以太坊多签名钱包的资金 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;以太坊多签名钱包模板将大部分的处理（除了支付出去）放在一个库钱包里 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;这是为了减少处理成本 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;库钱包有一个漏洞 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;有人可以调用它并初始化它（获得它的所有权）。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;然后可以杀死它 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;有人这么做了! (可能是意外的) &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;任何使用这个钱包的多重签名的钱包都不能再访问了 一些50万ETH不能再访问了 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;包括为Polkadot筹集的9000万美元的资金。 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;risks-of-an-ico&#34;&gt;Risks of an ICO&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;任何商业投资的风险投资可能失败 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;市场需求可能不存在 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;特别是对于寻求创造新市场类别的产品 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;诈骗和欺诈 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;对新技术投资的风险 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;技术可能会向前发展 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;技术人才的短缺 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可能出现竞争 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;网络效应和路径依赖 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ICO的特殊风险 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;技术是新的和不成熟的，还没有得到很好的理解 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;监管风险（例如，被监管机构起诉） &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可能是一个庞氏骗局 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;投资者的集体诉讼 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;早期投资者可能会被后期投资者起诉。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Mastering Bitcoin 2nd Edition Chapter 10: Mining and Consensus</title>
        <link>https://ginkgo.org.cn/posts/mb2_chapter_10/</link>
        <pubDate>Fri, 13 May 2022 00:00:00 +0000</pubDate>
        
        <guid>https://ginkgo.org.cn/posts/mb2_chapter_10/</guid>
        <description>&lt;h2 id=&#34;mastering-bitcoin-2nd-edition-chapter-10-mining-and-consensus&#34;&gt;Mastering Bitcoin 2nd Edition Chapter 10: Mining and Consensus&lt;/h2&gt;
&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;在本章开始的时候，我们就要为大家解决一个误区，Mining，挖矿，其实它的主要目的并不是获取新的比特币，或者赚取transaction fee，而是为了更为重要的目的，即作为Bitcoin的安全机制，以及保证去中心化的概念得以实现。获取新的比特币以及transaction fee作为奖励，属于独立的一个incentive system奖励系统，用于激励矿工们完成mining的任务，保证bitcoin的安全。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;不过挖矿这个比喻实在是有点贴切（也许就是为什么即使容易误导还是这么叫），挖矿不仅获得了珍贵的资源，同时这些资源是有限的，越挖越少的，因为大约每10min就会产生一个新的block，那么每四年，准确来说是每210,000个区块后新的bitcoin就会减半，从2009年的50 bitcoin per block最后到2140年，20.9999998 million的比特币都被挖出来之后就不再产生了。那么谁还挖矿呢？答案就是transaction fee的奖励，届时每一个block的transaction势必越来越多，产生的费用也会占据reward的主导地位，矿工就会为了transaction fee而继续挖矿。不得不说，即懂得密码学，又回编程，有懂经济货币，能设计如此完善的机制，Satoshi Nakamoto要么就是一个绝世天才，要不就是一群来自各个领域的天才结合在一起创造了这个杰作。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-05-13_09-39-58_screenshot.png&#34; width=&#34;700px&#34;/&gt;
&lt;/figure&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h3 id=&#34;bitcoin如何抵御inflation通货膨胀&#34;&gt;Bitcoin如何抵御Inflation通货膨胀？&lt;/h3&gt;
&lt;p&gt;首先我来简单说说我对于通货膨胀的理解，也就是说政府通过让货币贬值，来刺激消费，因为大家存在银行里的钱慢慢变得越来越不值钱了，那么大家就会倾向于趁早把钱价值高的时候换成商品来保值。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;那么政府一般来说就是通过直接打印更多的钱来实现这一点，因为当钱越来越多的时候，商品的价格也会随之上涨来应对，其实这也是一种隐性的对于存储者的税收或者说惩罚，因为他们在银行中的钱的实际价值实际上是减少了。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;那么我们为什么说Bitcoin其实是一个Deflationary Money，即通货紧缩的货币呢，因为其的总数量是固定的，不会无限的印钱，并且其产量在不断的减少，那么bitcoin实际上就会变得越来越值钱，造成了这个通货紧缩。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h3 id=&#34;decentralized-consensus-去中心化的共识&#34;&gt;Decentralized Consensus 去中心化的共识&lt;/h3&gt;
&lt;p&gt;传统的支付系统依赖于一个权威中心机构来完成所有交易的认证和清算，但是Satoshi Nakamoto 想要在Bitcoin上构建的就是一个去中心化的系统，即不需要一个权威机构，而是想办法让每一个拥有完整账本拷贝的 bitcoin full nodes都能认同一个结果，达成一个共识。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;实现这个去中心化共识需要四个步骤，我们一个一个展开来将 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Independent verification of each transaction, by every full node, based on a comprehensive list of criteria &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Independent aggregation of those transactions into new blocks by mining nodes, coupled with demonstrated computation through a Proof-of-Work algorithm &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Independent verification of the new blocks by every node and assembly into a chain &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Independent selection, by every node, of the chain with the most cumulative computation demonstrated through Proof-of-Work &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;independent-verification-of-transactions&#34;&gt;Independent Verification of Transactions&lt;/h3&gt;
&lt;p&gt;在第六章的学习中，我们知道了当wallet想要创造一个新的transaction，它就会收集用户可支配的UTXO，然后提供解锁这些UTXO的unlocking scripts从而构建outputs的内容并将构建好的这个transaction发送给邻居节点，从而扩散到整一个Bitcoin网络当中。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;但是在邻居节点转发这个transaction之前，每一个转发的节点都会进行一个independent verification of transactions，独立的交易验证，它们会创建一个valid transactions pool来收录所有的有效的transaction。而验证的过程包括了数据结构，以及一些基本的数值的范围的确认，同时还有一些更为复杂的验证例如： &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;检查transaction的inputs，所对应的outputs是否真的存在 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;检查transaction的inputs，所对应的outputs，是否已经被本地已经收录的valid transaction所使用了 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;检查transaction的inputs，所对应的outputs是否已经被花费了 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;以及我们之前提到过的，验证unlocking scripts 以及 locking scripts的组合是否能够匹配 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;mining-nodes&#34;&gt;Mining Nodes&lt;/h4&gt;
&lt;p&gt;Miners，矿工，是bitcoin network中一些特殊的节点，我们拿本书的一个经典例子来介绍，Jing作为一个miner，运行着一个bitcoin full node，miner的职责有： &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;接收和传递未经确认的transaction &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;集中这些transaction放入新的block当中 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;监听新的block的到来，这也意味着新block的竞争失败，也是下一个block竞争的开始 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;aggregating-transactions-into-blocks&#34;&gt;Aggregating Transactions into Blocks&lt;/h4&gt;
&lt;p&gt;当一个node验证了transactions之后，就会将他们放入本地的 &lt;code&gt;memory pool&lt;/code&gt;, or &lt;code&gt;transaction pool&lt;/code&gt; 当中，然后接着被放入新的 candidate block当中，当一个新的block到来之后，Jing的miner node会首先明白当前block已经竞争失败，那么会丢弃当前的candidate block进而创建新的candidate block来竞争下一个block，同时将新到来的block于本地的memory pool中的transaction进行比较，剔除那些已经被包含在block中的transaction &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The Coinbase Transaction&lt;/p&gt;
&lt;p&gt;我们在之前的章节中就介绍过，coinbase transaction就是一条特殊的transaction，由miner所创建，包含在新的candidate block当中，作为新的block挖掘的奖励，奖励的数值每四年减半，这些都需要miner自行计算并构造coinbase transaction &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;我们可以观察一下以下的transaction和之前我们在第六章中见过的有什么区别，主要是在inputs这一块，没有再指向一个特定的UTXO,而是一个coinbase &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-05-13_11-49-53_screenshot.png&#34; width=&#34;700px&#34;/&gt;
    &lt;/figure&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;通过下图我们也可以比较普通的transaction与coinbase transaction的区别 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;
之后是Transaction fee的计算，我们在第九章中提到过，transaction fee是unallocated value，只需要用inputs减去outpus即可 &lt;!-- raw HTML omitted --&gt;
Total Transaction Fees = Sum(Inputs) - Sum(Outputs) &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;再加上coinbase transaction的值就可以得到总的reward。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Constructing the Block Header&lt;/p&gt;
&lt;p&gt;在开始mining工作之前，miner需要先构造好这样一个block header然后，填好出了Nonce之外的所有fields，最后的mining的目标就是找到一个特定的nonce，使构成的block hash小于target的值，一个mining node需要尝试十亿或者数万亿的nonce才能找到一个符合条件的。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;关于target的介绍我们会放到后面，我们可以先将其当作是一个需要解决的puzzle,而mining的目的就是解决这个puzzle &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-05-13_11-59-20_screenshot.png&#34; width=&#34;700px&#34;/&gt;
    &lt;/figure&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;mining-the-block&#34;&gt;Mining the Block&lt;/h3&gt;
&lt;p&gt;简单来说，mining挖矿的过程就是不断的hash得到block header hash,只改变一个变量（Nonce），直到匹配到一个特定的target值 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h4 id=&#34;proof-of-work-algorithm&#34;&gt;Proof-of-Work Algorithm&lt;/h4&gt;
&lt;p&gt;接下来，我们通过几个例子，来说明整一个POW algorithm. &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;想象小朋友们在玩一个游戏，用两个骰子，谁先掷出结果小于12的值就算获胜，这是不是非常简单，因为只要不是两个6，就能取胜。那么随着要求小于的数值变得越小，那么需要尝试的次数是不是自然就需要增多，当要求小于3才能获胜的时候，只有一种可能可以获胜，那么需要投掷的次数就达到了最高，概率学我已经忘的差不多了（大概的意思大家懂就好了，具体的数值我也不算出来搞笑了） &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;是不是有点类似我们的之前提到的挖矿的目标，就是通过不断的尝试来达到一个特定的符合要求的值。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;再来看一个例子，假设我们需要一个nonce，加在&amp;quot;I am Satoshi Nakamoto&amp;quot;的后面，再利用SHA256 hash之后，得到的结果以0为开头，那么我们简单的以数字递增来类比掷骰子尝试，就会是这样： &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-05-13_14-55-02_screenshot.png&#34; width=&#34;700px&#34;/&gt;
&lt;/figure&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;我们通过观察可以发现，简单的一位数字的变化，可以让最后的hash值发生很大的变化，这也就是为什么我们频繁的看到hash再bitcoin的出现，因为任何长度的内容再经过了hash之后，都会生成每一位都完全随机，且简单的变化input会造成output的巨大变化的hash值，且没有办法找到一个特定的hash值的inputs，也没有办法找到另一个input与当前的input有相同的hash值。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;那我们接着回到例子，观察hash的结果可以发现当nonce = 13的时候，hash的值第一位是0了，也就是hash值小于： &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;0x1000000000000000000000000000000000000000000000000000000000000000 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;最后，我们来说说具体的Proof of Work algorithm 是如何工作的 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;回忆一下block header中的fields，有target，有nonce，target就是骰子游戏获胜的要求，也是最后计算的结果，nonce，就是需要不断尝试的内容，而整一个block header就是上一个例子中和nonce加在一起hash的&amp;quot;I am Satoshi Nakamoto&amp;quot;，那么每一个block header 里面的内容都包含了很多特有的信息，也就意味着他们的hash都会非常的不同，也就保证了mining的工作只能不停的做尝试。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h4 id=&#34;target-representation&#34;&gt;Target Representation&lt;/h4&gt;
&lt;p&gt;至此，我也就理解了target的结构的作用： &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Target由4个bytes组成，用来指代一个幂运算，第一个8位的byte，用来表示指数，后面三个bytes一共24位，用来表示一个系数，算出的结果，就是我们需要最后的block header hash需要小于的值。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;比如block 277,316的target bits就是0x1903a30c，0x19 就是coefficient指数，0x03a30c就是exponent系数 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Target的计算公式是： &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;target = coefficient * 2^(8 * (exponent – 3)) &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;target = 0x03a30c * 2^(0x08 * (0x19 - 0x03))^ &lt;!-- raw HTML omitted --&gt;
=&amp;gt; target = 0x03a30c * 2^(0x08 * 0x16)^ &lt;!-- raw HTML omitted --&gt;
=&amp;gt; target = 0x03a30c * 2^0xB0^ &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;十进制表达： &lt;!-- raw HTML omitted --&gt;
=&amp;gt; target = 238,348 * 2^176^ &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;=&amp;gt; target = 22,829,202,948,393,929,850,749,706,076,701,368,331,072,452,018,388,575,715,328 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;十六进制表达： &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;=&amp;gt; target = 0x0000000000000003A30C00000000000000000000000000000000000000000000 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;那么调整难度的方法也很简单，就和掷骰子一样，下调target的大小即可，具体的做法就是增加开头的0就好了，高位的0越多，意味着结果越小，意味找到匹配hash值的概率越低，需要做的尝试就越大。一般来说，每多一位0，需要的时间就会翻倍（匹配的值的数量会减半） &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;当nonce计算完毕之后，其他full node只需要将block header hash与target一做比较就知道了。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h4 id=&#34;retargeting-to-adjust-difficulty&#34;&gt;Retargeting to Adjust Difficulty&lt;/h4&gt;
&lt;p&gt;那么整一个去中心化的网络要如何统一的调整难度呢？ &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;每一个node都会独立地，自动地调整难度，也就是target，每隔2,016个blocks，所有的block都会计算之前的2,016个blocks所需要mining的总时间，如果超出了每10min每个，就会降低难度，如果少于10min每个，就会增加难度： &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;New Target = Old Target * (Actual Time of Last 2016 Blocks / 20160 minutes) &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h4 id=&#34;successfully-mining-the-block&#34;&gt;Successfully Mining the Block&lt;/h4&gt;
&lt;p&gt;一次成功的挖矿过程应该就是Jing在其mining node上组装好了block header之后，将这个block header发送给所有的高性能机器去进行hash的尝试，直到试出了匹配target的nonce后，mining node就会将这个block转发出去，其他mining node在验证了这个block之后，就会放弃自己当前的candidate block并加Jing的block添加到本地的blockchain上，并将其block header hash作为新的candidate block的previous hash,这其实也是一种投票的代表，即表示认同Jing的block，并将自己的算力运用在Jing的block header hash上。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h3 id=&#34;validating-a-new-block&#34;&gt;Validating a New Block&lt;/h3&gt;
&lt;p&gt;每一个bitcoin node都会通过一系列的标准验证新到来的block，只要有一个没有符合标准，那么整一个block就会作废，如果miner在一些内容上做了一些欺骗，比如把coinbase transaction 写的很大，然后再花大量的算力来完成proof-of-works algorithm，那么他们就会浪费所消耗的所有电费而做了一次无用功。这个检查将会包括block header的fields，也会包含一些例如大小的metadata，同时别忘了之前提到过的所有transaction的验证。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h3 id=&#34;assembling-and-selecting-chains-of-blocks&#34;&gt;Assembling and Selecting Chains of Blocks&lt;/h3&gt;
&lt;p&gt;Bitcoin 去中心化共识机制的最后一个步骤就是将验证好的block链接到blockchain上面去，大家注意到标题上有一个selecting chains的字眼，没错，最后一步还面临着chains的选择，这也意味着可以链接的chain不只一条，这与我们之后要讲到的 &lt;code&gt;Fork&lt;/code&gt; 的有关。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;每一个Nodes将维护三种区块 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;链接在主链上的区块 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;链接在主链分支上的区块 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;孤儿区块，也就是找不到父区块的区块 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们这里直接开始介绍Fork的概念，否则我觉得chain的变动的问题很难理解 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h4 id=&#34;blockchain-forks&#34;&gt;Blockchain Forks&lt;/h4&gt;
&lt;p&gt;Fork这个概念发生在两个mining node同时挖出了一个合法的block，那么他们在验证了proof-of-work algorithm的一瞬间就会将这个新的block传播出去，很显然离这两个mining node越近的node将会越早收到这个新的block，但是最终整个bitcoin network上的所有node，都会有两个新的block来指向上一个父区块 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;下图的结构就是每一个node连接在一起，形成整一个bitcoin network,同时圆圈中的星星就表示blockchain的末端，最新的一个block，在这个时候，所有的node中的blockchain都是一样的。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-05-13_16-54-15_screenshot.png&#34; width=&#34;700px&#34;/&gt;
&lt;/figure&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;那么此时，Node X和Node Y同时计算出了新的block,我们用三角和倒三角表示，然后他们开始传递这个新的block，X 与 Y周围的node都会更优先收到他们的block &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-05-13_16-55-50_screenshot.png&#34; width=&#34;700px&#34;/&gt;
&lt;/figure&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;但是最终，他们的blockchain上前一个父区块上都会连着两个新的block，他们都可以算是合法的，那么一如既往，每一个mining node就会以其中一个block，正三角或者倒三角作为previous block hash 进行新的block的计算。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-05-13_16-57-15_screenshot.png&#34; width=&#34;700px&#34;/&gt;
&lt;/figure&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;这时候，总有一个节点会算出新的一个block，根据其选中的previous block hash,这里也能更好的体现我们之前说的算力投票的问题，当有两个节点同时合法的时候，每一个mining node都会做出自己的选择来通过行动（hash计算）来支持其中的一个node。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-05-13_16-59-10_screenshot.png&#34; width=&#34;700px&#34;/&gt;
&lt;/figure&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;当这个新的block产生的时候，进而扩散到整一个bitcoin network，那么每个node在验证过后就会根据previous block hash链接到其中一个竞争的block上，最终形成了一条更长的chain，同时也意味付出了更多的算力，我们称这条chain为main chain 主链。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-05-13_17-02-46_screenshot.png&#34; width=&#34;700px&#34;/&gt;
&lt;/figure&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;那些“站错队”的mining node将会马上停止手中的工作，开始为新的主链进行计算，因为之后计算的block都会变成orphan孤儿区块 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;有了Fork的指示之后我们再来说主链，分支的概念就容易的多了 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;Main chain&lt;/dt&gt;
&lt;dd&gt;主链，也就是拥有最长的，也就是付出了更多算力的链 &lt;!-- raw HTML omitted --&gt;
&lt;p&gt;main chain上可能也会有分支区块，这些分支将被保留下来，因为可能在将来用来取代现有的main chain &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;Orphan block&lt;/dt&gt;
&lt;dd&gt;孤儿区块，顾名思义，他们的各项标准都被验证会合法，可是previous block hash却找不到一个存在父区块可以匹配 &lt;!-- raw HTML omitted --&gt;
&lt;p&gt;这种区块可能会发生在前后两个block 的计算时间间隔很短，同时子区块的传播快于父区块，导致了子区块先达到却尴尬的发现没有父区块可以连接 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;那么这些区块就会被放在orphan block pool中等待可以链接的父区块的到来 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;h3 id=&#34;consensus-attacks&#34;&gt;Consensus Attacks&lt;/h3&gt;
&lt;p&gt;Bitcoin在理论是是可以被攻击的，但需要注意的是，这也仅仅是针对未来的consensus共识，或者最近的几个block（最近的几十个），因为随着blockchain的变长，越早的block就越不容易被收到影响，就像我们之前举的地质层的例子一样。Consensus attacks只能影响最近的blocks以及造成针对未来blocks创建的DoS攻击。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;其中一个场景就是&amp;quot;51% attack&amp;quot;，也就是当attackers能够控制超过半数的hashing power，就可以成功的攻击bitcoin，有三种攻击的手段 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;deliberate forks &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;double-spend transactions &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;DoS attacks &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其实根据研究不需要51%的算力，只要能够控制超过1/3成功的概率就已经很高了 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;Fork/double-spend attack&lt;/dt&gt;
&lt;dd&gt;主要目的是为了最近的block无效化，通过fork一个区块，然后通过掌握大量的算力，使main chain切换到新fork的区块链分支上来 &lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;这里要注意的是一个double-spend attack只能在attacker拥有目标transaction中的inputs的合法signature的情况下才能进行 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;我们通过一个具体的例子来说明一个double-spend attack是如何发生的 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;有一个Attacker Mallory想要从Carol的画廊中买一副价值很高的画作，他在付款之后，画廊在最新的一个block上确认了transaction，于是就把画交给了Mallory。但是于此同时，Mallory有一个帮手叫做Paul，他运营这一个mining pool，控制了相当大的算力，他直接重新mine/fork了相同高度的这个block，改写了transaction，将原本需要花费给画廊的UTXO转向了自己的钱包，并又算了一个block使当前的chain变得比原来的更长，成为了主链，这也就意味着原本的block失效了，transaction也就无效了，那么这个UTXO其实也就无法被消费了。因此，对于大数值的交易来说，最好可以采用第三方担保的手段来进行交易，并且等待6个以上的block都确认了这条transaction之后，才会比较稳妥。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;当然，一旦有一方人员拥有这样庞大的算力，并开始破坏bitcoin的运行，那他们肯定不是冲着钱去的，或者说不是为了从bitcoin中直接获利的，因为一旦去中心化的共识安全机制被破坏，那么没有人会相信这个系统，价格也会崩溃。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h3 id=&#34;changing-the-consensus-rules&#34;&gt;Changing the Consensus Rules&lt;/h3&gt;
&lt;p&gt;在上面的章节中我们介绍了decentralised consensus mechanism的四个步骤，这是整一个bitcoin的基石，但是随着时代的变化，技术以及需求的改变，整一个bitcoin的系统也将不断更新和进步，但是去中心化系统以及机制的升级，将会被一般中心化开发管理的软件升级要难得多。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Forks这个概念我们在之前已经提到过了，一般会出现在两个竞争的block的出现中，让blockchain产生了分支。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;我们接下来要介绍的两个概念 &lt;code&gt;Hard Forks&lt;/code&gt; ，以及 &lt;code&gt;Soft Forks&lt;/code&gt; 也是相同的结果，他们也会创造分支，但是意义不同，这是为了对Consensus rules进行改变 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h4 id=&#34;hard-forks&#34;&gt;Hard Forks&lt;/h4&gt;
&lt;p&gt;我们通过一个具体的例子来介绍Hard forks是如何实现与运行的 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;下图展现的是一个blockchain，在Block4的位置出现了一个普通的fork，在竞争中4a获胜了，因为block5先被添加了，因此有4a的成为了主链 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;那么在Block6之后发生的就是 &lt;code&gt;Hard Forks&lt;/code&gt; ，在Block6之后，一部分client进行了系统的升级，并采用了新的 consensus rule，假设新的规则改变了transaction中，用在unlocking script中的signature生成算法被改变了，当使用新的算法构建的transaction被广播出去之后，只有采用新规则的mining node能够验证并处理这条transaction，进而聚集到candidate block当中去。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;那么对于那些没有升级的node，他们会直接拒绝这种transaction，因为在他们的核对机制当中，这条transaction是不合法的。他们会拒绝所有新规则下的transaction 以及block，新的block也会被他们视为orphan block，此后这两条分支将独立运行，互不兼容。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-05-13_21-58-56_screenshot.png&#34; width=&#34;700px&#34;/&gt;
&lt;/figure&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h4 id=&#34;soft-forks&#34;&gt;Soft Forks&lt;/h4&gt;
&lt;p&gt;Soft forks准确来说并不是一个典型的fork，即其不会使blockchain产生分支。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Hard forks对于consensus rules的改变是与老版本的规则互不兼容的,可以说是有所创新，新老版本互相无法理解，而相反的，soft forks对于对老版本的consensus rules做出限制，即在原有的基础上进行限制与修改，其作用范围小于老版本的内容。因此新老版本仍然可以互相理解，transaction和block的验证与添加也可以继续进行。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Mastering Bitcoin 2nd Edition Chapter 9: The Blockchain</title>
        <link>https://ginkgo.org.cn/posts/mb2_chapter_9/</link>
        <pubDate>Thu, 12 May 2022 00:00:00 +0000</pubDate>
        
        <guid>https://ginkgo.org.cn/posts/mb2_chapter_9/</guid>
        <description>&lt;h2 id=&#34;mastering-bitcoin-2nd-edition-chapter-9-the-blockchain&#34;&gt;Mastering Bitcoin 2nd Edition Chapter 9: The Blockchain&lt;/h2&gt;
&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;在这一章中，我们将要介绍blockchain区块链的概念，区块链顾名思义，就是很多的block串联在一起，形成了一条长长的链子。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;在实际情况中，blockchain使用了stack栈的结构，也就是第一个block，我们称为 &lt;code&gt;genesis block&lt;/code&gt; 被放在栈底，然后随着新的block的产生，慢慢一个一个压入栈。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;每一个block（出了genesis block）都有一个 &lt;code&gt;parent block&lt;/code&gt; 也就是父区块，同时每一个block都有一个block header，和我们熟知的TCP header一样，里面可以有很多的fields，其中就有一个field叫做 &lt;code&gt;previous block hash&lt;/code&gt; ，指示了其父区块的hash &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;这里我讲一下自己对hash的理解，就是本身每一个block header都会包含很多的信息，我们可以通过hash的方法将这些复杂的信息转化为一条唯一的哈希值，那么也就是说，一个block的block header中有其父区块的hash，那么当其再被hash保存的时候，就会收到父区块的hash的影响，也就是说，如果父区块的hash改变了，那么接下来一系列的子区块的hash都会随之发生改变。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;这也就是为什么blockchain如此安全，因为如果你企图篡改一个block的内容，那么势必会引发整个一个blockchain的重新计算，而这样的计算是不可能完成的，越长的链越难实现，所以就像我们在之前的章节中提到的那样，到了6个以上的block我们就可以说是安全了。这就和地层一样，越在上面的地质层就越容易发生改变，收到季节气候的影响，而越埋在下面的地质层就越稳定，越不容易收到影响。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;一个block会对应一个父区块，但一个block可以拥有很多的子区块，这就是我们说的Fork，这个概念我们会在后面一起学习到。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h3 id=&#34;block的结构&#34;&gt;Block的结构&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;一个block的构成&lt;/dt&gt;
&lt;dd&gt;&lt;ol&gt;
&lt;li&gt;block header &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;transactions &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-05-12_10-37-33_screenshot.png&#34; width=&#34;500px&#34;/&gt;
&lt;/figure&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;Block header&lt;/dt&gt;
&lt;dd&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;previous block hash，用来指向父区块的hash &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;a set of metadata: difficulty, timestamp, and nonce, 这些是在挖矿中产生的 metadata &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;merkle tree root, 用来总结当前block的所有transaction &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-05-12_10-39-38_screenshot.png&#34; width=&#34;700px&#34;/&gt;
        &lt;/figure&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/dd&gt;
&lt;dt&gt;Block identifiers&lt;/dt&gt;
&lt;dd&gt;我们有两种办法来指代一个block： &lt;!-- raw HTML omitted --&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;block hash，或者准确的来说是block header hash,因为是将block header用SHA256 hash两边的结果 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;这里细心的朋友可能会发现，在block的数据结构当中，并没有包含当前block hash的信息，因为其是由每一个收到当前block的node来计算，并保存在另外的数据库中的metadata &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;block height, 第一个block的height就是0，后面就越来越高，当然这不是唯一的，之后我们在Fork中会讲到 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;h4 id=&#34;genesis-block&#34;&gt;Genesis Block&lt;/h4&gt;
&lt;p&gt;Genesis block也就是所有block的祖先，其于2009年被Satoshi Nakamoto所创建，并附带有一条隐藏的信息， &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;“The Times 03/Jan/2009 Chancellor on brink of second bailout for banks.” &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;通过引用了泰晤士报的标题来指示了其最早创建的时间，同时用以调侃全球正在经历的货币危机。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Genesis Block的hash值如下，我们可以在任意一个区块查询网站上找到它的信息 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.blockchain.com/btc/block/000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.blockchain.com/btc/block/000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f&lt;/a&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h4 id=&#34;区块链中链接新的区块&#34;&gt;区块链中链接新的区块&lt;/h4&gt;
&lt;p&gt;每一个Bitcoin full nodes都在本地保存了完整的区块链的副本，从genesis block开始到最新的区块，当收到新的区块的时候，每一个node就会验证这个block并添加到本地的blockchain上面去，验证的方法则是核对previous block hash的值是否为本地blockchain的最后一个区块的hash（有待考证，我觉得是不是太简单了一点，后期可能会修改，如果发现错误没有修改，请联系我修改） &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-05-12_21-19-24_screenshot.png&#34; width=&#34;700px&#34;/&gt;
&lt;/figure&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h3 id=&#34;merkle-trees&#34;&gt;Merkle Trees&lt;/h3&gt;
&lt;p&gt;记得我们之前提到过每一个Block中都包含了所有的Transactions，但是很明显维护所有的这些transactions需要花费大量的内存空间，因此在这里我们就会采用Merkle Trees这个数据结构，顾名思义是一个Tree的结构，由root，nodes以及leaves组成，来简化对于transactions的维护 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Merkle Trees的目的就是将所有的Transaction的hash（double-SHA256）作为树的leaves，并将每一对transaction的hash组合起来再进行hash，递归得不断hash，最终得到 &lt;code&gt;merkle root&lt;/code&gt; 来表示所有的transaction的summary &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;举一个例子，当我们有A, B, C, D四个transactions，那他们的Hash就是，H_A, H_B, H_C and H_D，将他们两来那个配对再次Hash，最终得到Merkle Root（如何transaction的数量是单数，那么就重复最后一个leaves来实现平衡树） &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;H_A = SHA256(SHA256(Transaction A)) &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;H_AB = SHA256(SHA256(H_A + H_B)) &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-05-12_21-29-43_screenshot.png&#34; width=&#34;700px&#34;/&gt;
&lt;/figure&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;理解这个结构非常的简单，但是这里我们就要问一个问题，这有什么好处呢？ &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;首先因为是树的结构，因此在查询一个特定的节点就将算法的复杂度从N降低到了log(N)的水平 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;想象一个场景，首先我们有一个可靠的Merkle Root(如下图的结构),然后我们想要验证Transaction K在这个block当中，那么就可以只利用H_L, HIJ, H_MNOP, H_ABCDEFGH的信息，就可以和H_K一起算出最后的Merkle Root来核对是否正确。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-05-12_22-05-58_screenshot.png&#34; width=&#34;700px&#34;/&gt;
&lt;/figure&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;这里我们就需要引出一个新的概念：Simplified Payment Verification (SPV) &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h4 id=&#34;simplified-payment-verification--spv&#34;&gt;Simplified Payment Verification (SPV)&lt;/h4&gt;
&lt;p&gt;就像我们之前说的，Full node会记录并实时维护所有的transaction，但是SPV nodes作为一个轻量级的node，只需要记录和维护所有的block headers就够了，因为其中就有可靠的Merkle root信息，每当我们想要验证一个transaction是否存在的时候，SPV只需要向blockchain network请求对应的需要验证的hash值，就可以进行完成验证。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Mastering Bitcoin 2nd Edition Chapter 2: How Bitcoin Works</title>
        <link>https://ginkgo.org.cn/posts/mb2_chapter_2/</link>
        <pubDate>Wed, 11 May 2022 00:00:00 +0000</pubDate>
        
        <guid>https://ginkgo.org.cn/posts/mb2_chapter_2/</guid>
        <description>&lt;h2 id=&#34;mastering-bitcoin-2nd-edition-chapter-2-how-bitcoin-works&#34;&gt;Mastering Bitcoin 2nd Edition Chapter 2: How Bitcoin Works&lt;/h2&gt;
&lt;h3 id=&#34;bitcoin-transactions&#34;&gt;Bitcoin transactions&lt;/h3&gt;
&lt;h4 id=&#34;terms&#34;&gt;Terms&lt;/h4&gt;
&lt;dl&gt;
&lt;dt&gt;Transaction&lt;/dt&gt;
&lt;dd&gt;Move value from &lt;code&gt;transaction inputs&lt;/code&gt; to &lt;code&gt;transaction outputs&lt;/code&gt; &lt;!-- raw HTML omitted --&gt;
&lt;p&gt;将多个 bitcoin value 转移给多个outputs地址 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Input: reference to a previous transaction&amp;rsquo;s output, showing where the value is coming from &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Wallet里面的bitcoin都来自于之前的 transaction 的 output，使用的时候就是引用之前 outputs的地址 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Output: directs a specific value to new owner&amp;rsquo;s bitcoin address, and can include a change output back to the original owner &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Bitcoin value发送到新的拥有者的地址，同时一部分找零回到原有者的地址 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Transaction as double-entry bookkeeping &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-04-21_10-55-13_screenshot.png&#34; width=&#34;400px&#34;/&gt;
    &lt;/figure&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;Change&lt;/dt&gt;
&lt;dd&gt;找零 &lt;!-- raw HTML omitted --&gt;
&lt;p&gt;与物理货币使用类似，当作为input的bitcoin value大于实际所需要的output的值，那么由于不能把一个bitcoin value拆开，因此output除了原来要求的值，还有一个新的bitcoin value返回给原有的账户，均使用新的地址 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;Transaction fee&lt;/dt&gt;
&lt;dd&gt;The slight difference between input and outputs &lt;!-- raw HTML omitted --&gt;
&lt;p&gt;It is collected by the miner as a fee for validating and including the transaction in a block to be recorded on the blockchain &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Transaction output 后会扣除一定的 &lt;code&gt;transcation fee&lt;/code&gt;,用于作为miner验证和将transaction加入block的奖励 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;&amp;ldquo;Spending&amp;rdquo;&lt;/dt&gt;
&lt;dd&gt;sign a transaction that transfers value from a previous transaction over to a new owner identified by a bitcoin address &lt;!-- raw HTML omitted --&gt;
使用用户的 key 来确认一次transaction &lt;!-- raw HTML omitted --&gt;&lt;/dd&gt;
&lt;dt&gt;Transaction chains&lt;/dt&gt;
&lt;dd&gt;所有当前拥有者所拥有的bitcoin value 均来自于上一次 transaction的 output，这些 bitcoin value将会作为下一次 transaction 的 input &lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-04-21_10-54-39_screenshot.png&#34; width=&#34;400px&#34;/&gt;
    &lt;/figure&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;h4 id=&#34;transaction-forms&#34;&gt;Transaction forms&lt;/h4&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Most common transaction&lt;/p&gt;
&lt;p&gt;最普通的 transaction，input的value 大于output，因此一部分转交给新的owner，一部分找零返回原来的地址 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-04-21_10-56-43_screenshot.png&#34; width=&#34;400px&#34;/&gt;
    &lt;/figure&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Transaction aggregating funds&lt;/p&gt;
&lt;p&gt;当有很多“零钱”的时候，凑齐（aggregate）很多的inputs转交给新的owner &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-04-21_10-57-21_screenshot.png&#34; width=&#34;400px&#34;/&gt;
    &lt;/figure&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Transaction distributing funds&lt;/p&gt;
&lt;p&gt;一份或多份inputs需要转交给多个owners，例如发工资(payroll) &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-04-21_10-58-21_screenshot.png&#34; width=&#34;400px&#34;/&gt;
    &lt;/figure&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;constructing-a-transaction&#34;&gt;Constructing a Transaction&lt;/h3&gt;
&lt;h4 id=&#34;getting-the-right-inputs&#34;&gt;Getting the Right Inputs:&lt;/h4&gt;
&lt;p&gt;Most wallets keep track of all the available outputs belonging to addresses in the wallet &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Wallet application queries the bitcoin network to retrieve this information &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;For example, use HTTP GET command to a specific URL to return all the unspent transaction outputs for an address &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Wallet application can construct transactions even if it is completely offline &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;关于Transaction的工作完全是由用户选择的wallet application来完成的，那么在获取正确的inputs的时候 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;如果用户选择的wallet是一个full node，那么wallet就会直接去查询bitcoin network 中的内容； &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;如果用户选择的是一个lightweight 的wallet，那么它只会追踪用户个人的unspent outputs &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;然后进行转账，这时候不需要网络也可以进行，就像在家里写了一张支票，可以稍后再交给银行一样，这里在本地离线写好了transaction的inputs和outputs，随后再交给bitcoin network 也可以 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h4 id=&#34;creating-outputs&#34;&gt;Creating outputs&lt;/h4&gt;
&lt;p&gt;&amp;ldquo;A transaction output is created in the form of a script that creates an encumbrance on the value and can only be redeemed by the introduction of a solution to the script.&amp;rdquo; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Alice’s transaction output will contain a script that says something like, “This output is payable to whoever can present a signature from the key corresponding to Bob’s public address.” Because only Bob has the wallet with the keys corresponding to that address, only Bob’s wallet can present such a signature to redeem this output. Alice will therefore “encumber” the output value with a demand for a signature from Bob.&amp;rdquo; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;创建outputs: &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Alice 创建一个脚本，这个脚本会实现：将一部分的inputs抵押在bitcoin network 上，随后等待Bob 来赎回。那么赎回就需要Bob 提供他对应的key来进行签名，只要签名正确就可以赎回这部分的 bitcoin value &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;同时transaction 会产生transaction fee 用来支付 miner 对transaction进行验证和记账的奖励，这个 trasaction fee 通常会在找零 change 里扣除 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h3 id=&#34;bitcoin-mining&#34;&gt;Bitcoin Mining&lt;/h3&gt;
&lt;h4 id=&#34;记账&#34;&gt;记账&lt;/h4&gt;
&lt;p&gt;转发交易：最终的目的是将每一次交易都记录在block chain 上面 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;所有参与到bitcoin network 中的终端都叫做bitcoin node  他们都通过bitcoin protocol 来进行交流 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;当Alice的wallet 将一个transaction 发送到另一个bitcoin node 的时候，每个节点都会验证这个transaction 是否属于自己，因为他们都可以用自己的key来验证，直到传递到Bob &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;当一个bitcoin node 收到了之前没有见过的transaction 的时候，他们就会做flooding 来确保大部分的节点都能收到这个transaction &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;这里有一个常见的误区就是，Bob 需要等待10min或者60min的时间，等待transaction被记账之后，才能完成咖啡的交付，实际上只需要几秒钟的时间，Bob 所拥有的 bitcoin node 就会得知有一个属于他的待赎回的outputs, 这已经是十分可靠的了 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h4 id=&#34;挖矿&#34;&gt;挖矿&lt;/h4&gt;
&lt;p&gt;矿工负担高性能的机器以及运行所需要的电费来进行挖矿，主要的工作是验证 Proof-of-Work &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;“The algorithm for Proof-of-Work involves repeatedly hashing the header of the block and a random number with the SHA256 cryptographic algorithm until a solution matching a predetermined pattern emerges.” &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;矿工之前都可以互相合作，通过 mining pool &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;每次当bitcoin network 中有bitcoin node 提交一个新的transaction ，这些transaction就会被放到pool of unverified transactions 当中。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;每个矿工开始挖矿的目的都是为了创造一个属于自己的block, 然后将这个block 添加到blockchain 上面去 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;因此他们会首先创建一个 &lt;code&gt;candidate block&lt;/code&gt;, 然后开始验证所有当前存在于 &lt;code&gt;pool of unverified&lt;/code&gt; 的 transactions, 同时他们会添加一条新的transaction which 指向他们的地址，这个transaction 所包含的bitcoin value 就是一个新的block 的奖励以及所有的transaction fee ，相当于是银行印了新的钱还有所有转账的手续费，当他们谁第一个完成了 proof of work algorithm的计算，就可以将他们所创造的 &lt;code&gt;candidate block&lt;/code&gt; 添加到block chain 的末尾去成为新的block，其他人验证了其正确性之后，就会转而创建新的candidate block来计算新的block &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;一个很好的比喻就是proof of work 就是一个大型的数独游戏，通过增加行和列的大小可以很容易的增加难度，但是验证起来却十分容易 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;同时除了验证pool of unverified transactions 之外，还需要验证以前的transactions ，也就是说计算量会越来越大，之前的transaction 也会变得越来越可靠，一般认为存在于6个blocks的 transaction就已经是不可逆的了 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Mastering Bitcoin 2nd Edition Chapter 6: Transactions</title>
        <link>https://ginkgo.org.cn/posts/mb2_chapter_6/</link>
        <pubDate>Sun, 24 Apr 2022 00:00:00 +0000</pubDate>
        
        <guid>https://ginkgo.org.cn/posts/mb2_chapter_6/</guid>
        <description>&lt;p&gt;&amp;lt;!&amp;ndash;more&amp;ndash;&amp;gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;mastering-bitcoin-2nd-edition-chapter-6-transaction&#34;&gt;Mastering Bitcoin 2nd Edition Chapter 6: Transaction&lt;/h2&gt;
&lt;p&gt;&amp;ldquo;Transactions are the most important part of the bitcoin system. Everything else in bitcoin is designed to ensure that transactions can be created, propagated on the network, validated, and finally added to the global ledger of transactions (the blockchain).&amp;rdquo; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;第六章的开篇又提到了Transaction 的重要性，可以说就是为了保证Transaction 能够成功，才创造了其他一系列的技术支持。在第二章中，我们已经大致明白了transaction 是怎样工作的了，在第六章中，我们将介绍其中的细节。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;先贴一个Transaction 在这里，之后我们慢慢展开讲其中所包含的信息 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;version&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;locktime&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;vin&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;txid&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;7957a35fe64f80d234d76d83a2a8f1a0d8149a41d81de548f0a65a8a999f6f18&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;vout&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;scriptSig&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;3045022100884d142d86652a3f47ba4746ec719bbfbd040a570b1deccbb6498c75c4ae24cb02204 b9f039ff08df09cbe9f6addac960298cad530a863ea8f53982c09db8f6e3813[ALL] 0484ecc0d46f1918b30928fa0e4ed99f16a0fb4fde0735e7ade8416ab9fe423cc5412336376789d1 72787ec3457eee41c04f4938de5cc17b4a10fa336a8d752adf&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;sequence&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4294967295&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;vout&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.01500000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;scriptPubKey&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;OP_DUP OP_HASH160
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;ab68025513c3dbd2f7b92a94e0581f5d50f654e7 OP_EQUALVERIFY OP_CHECKSIG&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.08450000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;scriptPubKey&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;OP_DUP OP_HASH160
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt; 7f9b1a7fb68d60c536c2fd8aeaa53a8f3cc025a8 OP_EQUALVERIFY OP_CHECKSIG&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;transaction-outputs-and-inputs&#34;&gt;Transaction Outputs and Inputs&lt;/h3&gt;
&lt;p&gt;这里我们直接引入一个新的概念： &lt;code&gt;UTXO (Unspent transaction outputs)&lt;/code&gt; 未被花费的outputs，他具有discrete and indivisible 两个特性，就像物理货币一样，每一个硬币，每一张钞票，你在消费的时候，不能把它拆开来使用一样，并且一旦用出，你得到的找零也是其他的货币。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;所有的Transaction整个过程中都是涉及到UTXO &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;Received Bitcoin&lt;/dt&gt;
&lt;dd&gt;Wallet 通过检测整一个bitcoin network, 发现有与当前钱包所控制的bitcoin address 相关的UTXO 存在 &lt;!-- raw HTML omitted --&gt;&lt;/dd&gt;
&lt;dt&gt;Bitcoin Balance&lt;/dt&gt;
&lt;dd&gt;Wallet 对所有这些检测到的可以使用的UTXO 做一个总和，就是当前的余额balance &lt;!-- raw HTML omitted --&gt;&lt;/dd&gt;
&lt;dt&gt;Spend UTXO&lt;/dt&gt;
&lt;dd&gt;&lt;ol&gt;
&lt;li&gt;将多个UTXO 汇总/直接使用一个大额度的UTXO &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;差值作为找零生成新的UTXO 返回钱包 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;这同时也代表着新的UTXO 的产生 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;不同大小的UTXO的不断汇总，分散，但是形成了一条chain &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/dd&gt;
&lt;dt&gt;Coinbase transaction&lt;/dt&gt;
&lt;dd&gt;先有鸡，还是先有蛋的问题，最找的UTXO 从哪里来的呢？ &lt;!-- raw HTML omitted --&gt;
这里就要引入一个新的概念coinbase transaction 也就是每个block由miner创造的一个特殊的transaction， 包含了创造新的block 的奖励以及所有的transaction fees，这个就是最初始产生的UTXO &lt;!-- raw HTML omitted --&gt;&lt;/dd&gt;
&lt;/dl&gt;
&lt;h3 id=&#34;transaction-outputs&#34;&gt;Transaction Outputs&lt;/h3&gt;
&lt;p&gt;&amp;ldquo;Every bitcoin transaction creates outputs ,which are recorded on the bitcoin ledger.&amp;rdquo; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;Transcation outputs 由两部分组成&lt;/dt&gt;
&lt;dd&gt;&lt;ol&gt;
&lt;li&gt;一定数量的bitcoin, 用 &lt;code&gt;satoshis&lt;/code&gt; 来表示 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;一个密码学题目，用来决定如果使用这个output (A cryptographic puzzle: &lt;code&gt;locking script&lt;/code&gt;, &lt;code&gt;witness script&lt;/code&gt;, or a &lt;code&gt;scriptPubKey&lt;/code&gt;) &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;此时我们再回过头来之前transcation的内容，value out部分就很好理解了，就是用 &lt;code&gt;satoshis&lt;/code&gt; 表示的一部分value 以及用scriptPubkey表示的一个 puzzle, 我们之后会讲到如何lock+unlock 这个scriptPubKey &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;vout&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.01500000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;scriptPubKey&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;OP_DUP OP_HASH160
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;ab68025513c3dbd2f7b92a94e0581f5d50f654e7 OP_EQUALVERIFY OP_CHECKSIG&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.08450000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;scriptPubKey&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;OP_DUP OP_HASH160
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt; 7f9b1a7fb68d60c536c2fd8aeaa53a8f3cc025a8 OP_EQUALVERIFY OP_CHECKSIG&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;transaction-serialisation-outputs&#34;&gt;Transaction serialisation &amp;ndash; outputs&lt;/h4&gt;
&lt;p&gt;我们知道所有的Transaction 都会在整个bitcoin network中传递，同时也会被保存在各个节点上(bitcoin libraries) &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;那么为了传输以及保存的方便，就有了两种形式： &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;第一种就是我们之前见到过的用数据结构进行存储 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;第二种就是转换成byte stream 的形式，方便用于网络的传输 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;他们之前的转换就被我们称为序列化serialisation 以及反序列化 deserialisation &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;数据结构 -&amp;gt; byte-stream: serialisation &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-04-25_14-50-20_screenshot.png&#34; width=&#34;700px&#34;/&gt;
&lt;/figure&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;byte-stream -&amp;gt; 数据结构：deserialisation &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;transaction-inputs&#34;&gt;Transaction Inputs&lt;/h3&gt;
&lt;p&gt;Transaction inputs 制定了哪些UTXO 将要被用到本次transaction 当中，并为其提供unlocking script的proof of ownership &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;当wallet开始进行一次transaction 的时候，它会从该wallet 所控制的所有UTXO中选择符合要求的，一定数量的UTXO 来进行 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;Transaction Inputs 包含两个部分&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;一个指向对应的一个 UTXO 的指针 &lt;!-- raw HTML omitted --&gt;
（通过这个指针，包括hash id &amp;amp; sequence number, 我们可以在blockchain上找到这个UTXO 对应的信息） &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;一个 unlocking script &lt;!-- raw HTML omitted --&gt;
（用于满足UTXO的 locking script的使用条件） &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;我们继续通过之前的例子来看transaction inputs &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;vin&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;txid&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;7957a35fe64f80d234d76d83a2a8f1a0d8149a41d81de548f0a65a8a999f6f18&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;vout&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;scriptSig&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;3045022100884d142d86652a3f47ba4746ec719bbfbd040a570b1deccbb6498c75c4ae24cb02204 b9f039ff08df09cbe9f6addac960298cad530a863ea8f53982c09db8f6e3813[ALL] 0484ecc0d46f1918b30928fa0e4ed99f16a0fb4fde0735e7ade8416ab9fe423cc5412336376789d1 72787ec3457eee41c04f4938de5cc17b4a10fa336a8d752adf&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;sequence&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4294967295&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这条 Inputs 的记录包含了四个部分： &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Transaction ID &lt;!-- raw HTML omitted --&gt;
指向了我们需要的UTXO所对应的Transaction &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Output index (vout) &lt;!-- raw HTML omitted --&gt;
用于指示对应的那个Transaction中我们需要的UTXO &lt;!-- raw HTML omitted --&gt;
记得我们之前提到的不同forms的transaction吗，其中有一种就是存在很多的outputs，也就是生成了很多新的UTXO, 我们需要指出我们本次需要的具体是哪一个 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;scriptSig，用于unlock对应UTXO的locking script &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;sequence number &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;细心的人可能会发现，在这条关于inputs的记录中似乎少了点什么，作为一个转账记录，它缺少最重要的东西，就是“多少钱” &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;完全没有bitcoin value 以及 locking script的信息 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;这也是作者提醒各位开发者的信息，每次在处理transaction 特别是inputs的时候，我们都需要利用 &lt;code&gt;Transaction ID&lt;/code&gt; 去主动去获取对应的 UTXO 的信息(&lt;code&gt;getrawtrasaction&lt;/code&gt; and &lt;code&gt;decoderawtrasaction&lt;/code&gt;) &lt;!-- raw HTML omitted --&gt;
比如以这条记录为例，查询到的结果就是 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;vout&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &lt;span class=&#34;nt&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.10000000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &lt;span class=&#34;nt&#34;&gt;&amp;#34;scriptPubKey&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;OP_DUP OP_HASH160
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;7f9b1a7fb68d60c536c2fd8aeaa53a8f3cc025a8 OP_EQUALVERIFY OP_CHECKSIG&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;transaction-serialization-inputs&#34;&gt;Transaction serialization—inputs&lt;/h4&gt;
&lt;p&gt;Transaction inputs的存储和传输同样也需要用到序列化和反序列化 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-04-25_15-17-51_screenshot.png&#34; width=&#34;700px&#34;/&gt;
&lt;/figure&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h3 id=&#34;transaction-fee&#34;&gt;Transaction fee&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;设置transaction fee 的目的？&lt;/dt&gt;
&lt;dd&gt;&lt;ol&gt;
&lt;li&gt;给予miners记账的奖励 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;通过设置transaction fee 其实带来的是一个安全机制，也就是说attackers 不同通过大量的transaction来flood网络，因为这样会产生大量的消耗 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/dd&gt;
&lt;dt&gt;如何决定 transcation fee 的数量？&lt;/dt&gt;
&lt;dd&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;最开始是恒定的 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;后来开始可以自由设置 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/dd&gt;
&lt;dt&gt;Transaction fee 的多少有什么影响&lt;/dt&gt;
&lt;dd&gt;Transaction fee的数量直接决定了对应的这个 transaction 被处理的优先级，数量越多，就更有可能被包含在下一个block中 &lt;!-- raw HTML omitted --&gt;
&lt;p&gt;相对的，如果你设的越低，或者根本不设，很可能会因为best-effort而被放到很后面来执行，甚至根本永远都不会被处理 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;Adding Fees to Trasactions&lt;/dt&gt;
&lt;dd&gt;我们观察之前的transaction的数据结构，里面并没有任何的变量指向transaction fee，那么其实这里是需要提前自行从找零的charge中扣除一部分的bitcoin value，如果忘记做了这一点，就会把整一个charge付给miner。当我们主动扣除之后，那么在后期结算的时候，就可以发现有一些未被分配的bitcoin value，这些就会被当作是transaction fee。 &lt;!-- raw HTML omitted --&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Fees = Sum(Inputs) – Sum(Outputs)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;就如下图的一次transaction一样，我们可以看到右侧的outputs中，综合为0.995 BTC，也就是扣除了transaction fee之后的结果 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-05-11_22-57-13_screenshot.png&#34; width=&#34;700px&#34;/&gt;
    &lt;/figure&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;h3 id=&#34;transaction-validation&#34;&gt;Transaction validation&lt;/h3&gt;
&lt;p&gt;在这一章，我们来具体讲讲每一个transaction要如何得到验证，我们先再来回顾一下构成一个transaction所需要的inputs和outputs是由什么组成的。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;Transaction Inputs 包含两个部分&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;一个指向对应的一个 UTXO 的指针 &lt;!-- raw HTML omitted --&gt;
（通过这个指针，包括hash id &amp;amp; sequence number, 我们可以在blockchain上找到这个UTXO 对应的信息） &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;一个 unlocking script &lt;!-- raw HTML omitted --&gt;
（用于满足UTXO的 locking script的使用条件） &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;Transcation outputs 由两部分组成&lt;/dt&gt;
&lt;dd&gt;&lt;ol&gt;
&lt;li&gt;一定数量的bitcoin, 用 &lt;code&gt;satoshis&lt;/code&gt; 来表示 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;一个密码学题目，用来决定如果使用这个output (A cryptographic puzzle: &lt;code&gt;locking script&lt;/code&gt;, &lt;code&gt;witness script&lt;/code&gt;, or a &lt;code&gt;scriptPubKey&lt;/code&gt;) &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;我们可以观察到他们都包含了一个概念叫做 &lt;code&gt;script&lt;/code&gt; ，中文我们一般翻译为脚本，意思是一段可以执行的指令，一开始我接触这个概念的时候我也觉得很奇怪，为什么要在inputs和outputs中放脚本呢，他们又要如何运行呢，我们接着一起来来看。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;先说结论，这些脚本确实可以运行， &lt;code&gt;unlocking script&lt;/code&gt; 以及 &lt;code&gt;locking script&lt;/code&gt; 结合在一起，可以组成简单的计算，得到 &lt;code&gt;True&lt;/code&gt; / &lt;code&gt;False&lt;/code&gt; 的结果来决定本次 &lt;code&gt;transaction&lt;/code&gt; 是否成立，如果成立，那么 &lt;code&gt;UTXO&lt;/code&gt; 将会被 &lt;code&gt;spent&lt;/code&gt; 也就从 &lt;code&gt;UTXO set&lt;/code&gt; 中被移除了。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-05-11_21-20-46_screenshot.png&#34; width=&#34;700px&#34;/&gt;
&lt;/figure&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h4 id=&#34;pay-to-public-key-hash-script&#34;&gt;Pay-to-Public-Key-Hash script&lt;/h4&gt;
&lt;dl&gt;
&lt;dt&gt;A locking script&lt;/dt&gt;
&lt;dd&gt;&lt;ul&gt;
&lt;li&gt;is a spending condition placed on an output &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;also called &lt;code&gt;scriptPubKey&lt;/code&gt;, &lt;code&gt;witness script&lt;/code&gt;, &lt;code&gt;crytographic puzzle&lt;/code&gt; &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;it usually contained a public key or bitcoin address (public key hash) &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;dt&gt;A unlocking script&lt;/dt&gt;
&lt;dd&gt;&lt;ul&gt;
&lt;li&gt;is a script that &amp;ldquo;solves,&amp;rdquo; or satisfies, the conditions placed on an output by a locking script and allows the output to be spent &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;also called &lt;code&gt;scriptSig&lt;/code&gt; &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;contain a digital signature produced by the user&amp;rsquo;s wallet from his or her private key &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;我们用之前Alice在Bob的咖啡馆买咖啡的例子来演示具体需要如何来验证一次transaction: &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Alice发起了一次付款，她使用自己钱包中的UTXO作为inputs，然后产生一个output给咖啡馆，一个output作为找零返回给自己 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;发给咖啡馆的transaction output将会包含一个locking script如下: &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;OP_DUP OP_HASH160 &amp;lt;Cafe Public Key Hash&amp;gt; OP_EQUALVERIFY OP_CHECKSIG &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;OP开头的字符串都表示script指令，那么这一串locking script就包含了一系列的指令和咖啡馆的public key hash &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;当Bob的咖啡馆需要消费这个input(UTXO)的时候，就需要利用它的unlocking script来解锁之前的locking script,其中应该包含两个部分 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;Cafe Signature&amp;gt; &amp;lt;Cafe Public Key&amp;gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;那么当locking script和unlocking script拼接在一起的时候，就组成了一个完整的脚本 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;Cafe Signature&amp;gt; &amp;lt;Cafe Public Key&amp;gt; OP_DUP OP_HASH160 &amp;lt;Cafe Public Key Hash&amp;gt; OP_EQUALVERIFY OP_CHECKSIG &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果验证的结果为TRUE的话就验证成功了 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;我们可以看看具体的验证过程，这里的脚本语言是基于stack栈实现的： &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-05-11_21-45-29_screenshot.png&#34; width=&#34;700px&#34;/&gt;
&lt;/figure&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将signature压入栈 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;将Public key压入栈 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;使用DUP指令来复制栈顶的内容并压入栈 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-05-11_21-47-00_screenshot.png&#34; width=&#34;700px&#34;/&gt;
&lt;/figure&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用HASH160来处理栈顶的内容并将结果压入栈HASH160(PubK) = &amp;lt;PubKHash&amp;gt; &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;将原本locking script中的&amp;lt;PubKHash&amp;gt;压入栈 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;使用指令EQUALVERIFY来比较栈顶的两个 &amp;lt;PubKHash&amp;gt; 是否相等，如果相等，则全部移出栈 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;最后使用指令CHECKSIG来验证 &amp;lt;PubK&amp;gt; 与 &amp;lt;sig&amp;gt; 是否匹配（本质上判断是不是一对public key 和 private key），如果匹配成功，返回True，验证成功 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这里附带一个 &lt;code&gt;Bitcoin Address&lt;/code&gt; 的产生过程 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-05-11_21-52-24_screenshot.png&#34; width=&#34;700px&#34;/&gt;
&lt;/figure&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
