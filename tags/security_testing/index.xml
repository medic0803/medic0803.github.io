<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>security_testing on Under The Ginkgo</title>
        <link>https://ginkgo.org.cn/tags/security_testing/</link>
        <description>Recent content in security_testing on Under The Ginkgo</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-uk</language>
        <lastBuildDate>Tue, 24 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://ginkgo.org.cn/tags/security_testing/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>SCT Topic 10: Advanced Strategies</title>
        <link>https://ginkgo.org.cn/posts/sct_topic_10_advanced_strategies/</link>
        <pubDate>Tue, 24 May 2022 00:00:00 +0000</pubDate>
        
        <guid>https://ginkgo.org.cn/posts/sct_topic_10_advanced_strategies/</guid>
        <description>&lt;h2 id=&#34;sct-topic-10-advanced-strategies&#34;&gt;SCT Topic 10: Advanced Strategies&lt;/h2&gt;
&lt;h3 id=&#34;stealthiness-strategies&#34;&gt;Stealthiness Strategies&lt;/h3&gt;
&lt;p&gt;Before launch the attack, the attacker should check AV(anti-virus)/Filters detection, otherwise, their actions will leave some warnings or tracks in the target system &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Encoding (e.g., &lt;code&gt;msfencode&lt;/code&gt;, also use multiple at once), change the encoding of the file, the checking signature of malware analysis may not be triggered. &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Transient malware, e.g., run only in memory &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Mimicry, simulate legitimate app process to escape from the anti-virus &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Packers, obfuscate malicious code, and unpack routine at runtime &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note: Offline version of AVs offer less functionality &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h3 id=&#34;persistence-strategies&#34;&gt;Persistence Strategies&lt;/h3&gt;
&lt;p&gt;Attackers also want to keep their malware running on target system &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Payloads in Metasploit (e.g, reverse shell, meterpreter) for further interactions &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Scheduled Tasks, launch everytime after users rebooting systems &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Backdoors, leave backdoor for further interaction and exploitation &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In BeEf &lt;!-- raw HTML omitted --&gt;
Stored XSS will remain valid whenever the victims visits the page &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Possible to do some &amp;ldquo;privilege escalation&amp;rdquo; and &amp;ldquo;sandbox evasion&amp;rdquo; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keep-up-to-date&#34;&gt;Keep up to date&lt;/h3&gt;
&lt;p&gt;Keep track of what bad guys are doing &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Technical Reports &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;MITRE CVEs - &lt;a class=&#34;link&#34; href=&#34;https://cve.mitre.org/about/documents.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://cve.mitre.org/about/documents.html&lt;/a&gt; &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Google Project Zero &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Exploit DB &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.reddit.com/r/netsec/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.reddit.com/r/netsec/&lt;/a&gt; &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;adversarial-machine-learning&#34;&gt;Adversarial Machine Learning&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;Definition of machine Learning&lt;/dt&gt;
&lt;dd&gt;A computer program is said to learn from &lt;code&gt;experience E&lt;/code&gt; with respect to some &lt;code&gt;class of tasks T&lt;/code&gt; and &lt;code&gt;performance measure P&lt;/code&gt;, if its performance at tasks in T, as measured by P, improves with experience E &lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;Tom Mitchell, Machine Learning &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;h4 id=&#34;machine-learning-for-security&#34;&gt;Machine Learning for Security&lt;/h4&gt;
&lt;dl&gt;
&lt;dt&gt;5 Phases of ML for Security&lt;/dt&gt;
&lt;dd&gt;&lt;ol&gt;
&lt;li&gt;Data Collection &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Pre-processing and Feature Engineering &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Model Selection and Training &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Testing and Evaluation &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Evaluation against Time Evolution and Adversaries &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;h4 id=&#34;machine-learning-algorithms-categories&#34;&gt;Machine Learning Algorithms Categories&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Classification: given a labeled dataset, find a model that separates instances into classes &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Regression: given some points, try to generalise and predict real-valued numbers &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Clustering: given an unlabeled dataset, try to group similar elements &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;performance-metrics&#34;&gt;Performance metrics&lt;/h4&gt;
&lt;p&gt;I used to confuse about the metrics used in ML, I think the difficult point is how to define the &lt;code&gt;Positive&lt;/code&gt; and &lt;code&gt;Negative&lt;/code&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;We assume we are doing a malware classification, thus our target is to determine where a sample is a malware or not? &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;If we decide one program is a malware, we called it &lt;code&gt;Positive&lt;/code&gt; result, otherwise, it is a &lt;code&gt;Negative&lt;/code&gt; result. &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Thus, a &lt;code&gt;True Positive&lt;/code&gt; means, we think a program is a malware, it is actually a real malware &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;a &lt;code&gt;True Negative&lt;/code&gt; means, we think a program is a goodware, it is actually a goodware &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;a &lt;code&gt;False Positive&lt;/code&gt; means, we think a program is a malware, but it is actually a goodware, which we also called &lt;code&gt;false alarm&lt;/code&gt; &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;a &lt;code&gt;False Negative&lt;/code&gt; means, we think a program is a goodware, but it is actually a malware &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Precision and Recall&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Precision&lt;/code&gt; = TP / (TP + FP), it reflects the machine learning algorithm&amp;rsquo;s performance on &amp;ldquo;How many times you are right?&amp;rdquo;, TP + FP indicates the total sample are labeled by ML as malware (positive) &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Recall&lt;/code&gt; = TP / (TP + FN), it reflects &amp;ldquo;How many malware found by you&amp;rdquo;, TP + FN means all the actual malware within the dataset &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;F1-Score&lt;/code&gt; is defined as the &lt;code&gt;harmonic mean&lt;/code&gt; of Precision and Recall &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;F1-Score = 2 x (Precision x Recall) / (Precision + Recall) &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Accuracy&lt;/code&gt;  = (TP + TN) / (TP + FP + TN + FN), indicates that all correct decision made by the ML module &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Is Accuracy a good metric in Security? &lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;Accuracy can be &lt;code&gt;misleading&lt;/code&gt; when datasets are very imbalanced &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;In a malware dataset, the ratio of goodware and malware could be like 1000 : 1, thus it is easily to find benign program than malware, the dataset can easily become 99% &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;evasion&#34;&gt;Evasion&lt;/h4&gt;
&lt;p&gt;An attacker may try to &lt;code&gt;evade&lt;/code&gt; detection or &lt;code&gt;poison&lt;/code&gt; training data &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-05-24_15-03-39_screenshot.png&#34; width=&#34;700px&#34;/&gt;
&lt;/figure&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Spam Filtering&lt;/p&gt;
&lt;p&gt;Features: presence/absence of words &lt;!-- raw HTML omitted --&gt;
Attacks: bad word obfuscation / good word insertion &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-05-24_15-04-56_screenshot.png&#34; width=&#34;700px&#34;/&gt;
&lt;/figure&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;adversarial-machine-learning-taxonomy&#34;&gt;Adversarial Machine Learning: Taxonomy&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Test-time Evasion &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Training-time Poisoning &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Inference Attacks &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Model Stealing &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;Membership Inference &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;Shadow Model Estimation &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>SCT Topic 9: Exploitation Phase &#43; Industry Guest Seminar</title>
        <link>https://ginkgo.org.cn/posts/sct_topic-9_exploitation_phase_industry_guest_seminar/</link>
        <pubDate>Mon, 23 May 2022 00:00:00 +0000</pubDate>
        
        <guid>https://ginkgo.org.cn/posts/sct_topic-9_exploitation_phase_industry_guest_seminar/</guid>
        <description>&lt;h2 id=&#34;sct-topic-9-exploitation-phase-plus-industry-guest-seminar&#34;&gt;SCT Topic 9: Exploitation Phase + Industry Guest Seminar&lt;/h2&gt;
&lt;h3 id=&#34;vulnerabilities-and-exploits&#34;&gt;Vulnerabilities and Exploits&lt;/h3&gt;
&lt;p&gt;We often see these two terms, and sometimes we even interchangeable use both of them, but what&amp;rsquo;s the difference between them? &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;We should say first there is a &lt;code&gt;vulnerability&lt;/code&gt; found on software or system, and there is an &lt;code&gt;exploit&lt;/code&gt; which is the code that &lt;!-- raw HTML omitted --&gt;takes advantage of&lt;!-- raw HTML omitted --&gt; of the &lt;code&gt;vulnerability&lt;/code&gt; to compromise CIA of the target service. &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Furthermore, the distinction between software vulnerability and software bug is: &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A &lt;code&gt;vulnerability&lt;/code&gt; derives from a &lt;code&gt;software bug&lt;/code&gt;, which means a &lt;code&gt;vulnerability&lt;/code&gt; must be a &lt;code&gt;software bug&lt;/code&gt; &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;But only a &lt;code&gt;software bug&lt;/code&gt; allows attacker to compromise the CIA of a system, it can be called a &lt;code&gt;vulnerability&lt;/code&gt; &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;how-to-find-exploits-of-the-vulnerabilities&#34;&gt;How to find exploits of the vulnerabilities?&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Zero-day from underground market (be aware of fake exploits, always try to understand the exploit coee before running them) &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Authorised sources: Security Focus and Exploit database, searchsploit on kali linux &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;popular-vulnerabilities&#34;&gt;Popular Vulnerabilities&lt;/h3&gt;
&lt;h4 id=&#34;heartbleed&#34;&gt;Heartbleed&lt;/h4&gt;
&lt;p&gt;Before we elborate the details of the vulnerability, let&amp;rsquo;s first talk about what is a SSL Heatbeat? &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;SSL Heartbeat&lt;/dt&gt;
&lt;dd&gt;A message to know that two computer are still connected to each other, it contains information: &lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;Sender sends a message M of a &lt;code&gt;declared length L&lt;/code&gt; &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Receiver allocates a memory buffer of the &lt;code&gt;decalred length L&lt;/code&gt;, copies message M in memory, and reads it back to the sender &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Vulnerability happens due to missing checkgaurd: receiver &lt;code&gt;never&lt;/code&gt; checked the message is actually the same length as claimed to be! &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-05-23_15-55-33_screenshot.png&#34; width=&#34;700px&#34;/&gt;
&lt;/figure&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;We can see in above example, in the heartbeat packet, it constains both information client required to return and also sensitive information. &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Attacker could require the information more than it should be to let server reveal those sensitive information. &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s dig deeper into source code, the root cause back to one line code: &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;memcpy(bp, pl, payload) which copy the data without checking the size &lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;bp = destination &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;pl = source &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;payload = length &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;How to fix? &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;check if the size which client claimed to return is as same as it required. &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h4 id=&#34;dirty-cow&#34;&gt;Dirty COW&lt;/h4&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://dirtycow.ninja/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://dirtycow.ninja/&lt;/a&gt; &lt;!-- raw HTML omitted --&gt;
&amp;ldquo;A &lt;a class=&#34;link&#34; href=&#34;https://en.wikipedia.org/wiki/Race_condition&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;race condition&lt;/a&gt; was found in the way the Linux kernel&amp;rsquo;s memory subsystem handled the &lt;code&gt;copy-on-write (COW)&lt;/code&gt; breakage of private read-only memory mappings. &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;It is a local privilege escalation vulnerability &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a class=&#34;link&#34; href=&#34;https://en.wikipedia.org/wiki/Copy-on-write&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Copy-on-write (COW)&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;ul&gt;
&lt;li&gt;is a resource-management techniques &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;If a resource is duplicated but not modified &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;the duplicated file is not actually instantiated until the source first change &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;for optimisation of resource usage &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;An unprivileged local user could use this flaw to gain write access to otherwise read-only memory mappings and thus increase their privileges on the system.&amp;rdquo; (&lt;a class=&#34;link&#34; href=&#34;https://bugzilla.redhat.com/show_bug.cgi?id=1384344#&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;RH&lt;/a&gt;) &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;This flaw allows an attacker with a local system account to modify on-disk binaries, bypassing the standard permission mechanisms that would prevent modification without an appropriate permission set. &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;Impact&lt;/dt&gt;
&lt;dd&gt;&lt;ul&gt;
&lt;li&gt;A read-only file can become writable &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Used with remote root access &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Fix: use a copy-on-write flag &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h4 id=&#34;phpmailer-rce&#34;&gt;PHPMailer RCE&lt;/h4&gt;
&lt;dl&gt;
&lt;dt&gt;PHPMailer Normal Process&lt;/dt&gt;
&lt;dd&gt;&lt;ol&gt;
&lt;li&gt;PHPMailer gets user requests (to send a mail) &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;PHPMailer validates user-supplied data (from xxx to xxx, content, &amp;hellip;) &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;PHPMailer sends the data to the PHP &lt;code&gt;mail()&lt;/code&gt; function &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;PHPMailer calls the OS command &lt;code&gt;&amp;quot;sendmail&amp;quot;&lt;/code&gt; &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/dd&gt;
&lt;dt&gt;sendmail command&lt;/dt&gt;
&lt;dd&gt;/usr/bin/sendmail -i -t -f &amp;lt;sender&amp;gt; &amp;hellip; &lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;-i: don&amp;rsquo;t treat a message content with only a &amp;lsquo;.&amp;rsquo; as the end &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;-f: sender: set the envelope sender address &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;-t: extract recipients from message headers &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;The Issue: PHPMailer does not &lt;code&gt;sanitise&lt;/code&gt; email values properly before sending them to sendmail &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;We can see how PHPMailer validate the user-supplied data, and below is the actually parameters read by &lt;code&gt;sendmail&lt;/code&gt; script &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-05-23_17-31-12_screenshot.png&#34; width=&#34;700px&#34;/&gt;
&lt;/figure&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Then we can compose a payload and inject the malicious command into /var/www/cache/phpcode.php file and the malicious injected code will be executed &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-05-23_17-32-27_screenshot.png&#34; width=&#34;700px&#34;/&gt;
&lt;/figure&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h4 id=&#34;imagetragick&#34;&gt;ImageTragick&lt;/h4&gt;
&lt;p&gt;Fun fact, after people make the website of vulnerabilities on ImageMagick, the impact then become gradually serious &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://imagetragick.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://imagetragick.com/&lt;/a&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;ImageMagick RCE [CVE-2016-3714]&lt;/p&gt;
&lt;p&gt;it is a &lt;code&gt;Command injection&lt;/code&gt; vulnerability, due to insufficient parameter filtering during conversion of file formats &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;ImageMagick delegates some tasks to other services, such as wget, but it does not check the parameters which leave space for command injection &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-05-23_17-18-58_screenshot.png&#34; width=&#34;700px&#34;/&gt;
&lt;/figure&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;File Deletion&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-05-23_17-19-38_screenshot.png&#34; width=&#34;700px&#34;/&gt;
&lt;/figure&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;metasploit-framework&#34;&gt;MetaSploit Framework&lt;/h3&gt;
&lt;p&gt;MetaSploit framework is a powerful tools, it supports &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Initial &lt;code&gt;reconnaissance phase&lt;/code&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Results can be saved and stored into a database &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Run nmap to check the status of target system &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Vulnerability scanniing&lt;/code&gt; and &lt;code&gt;Execution of exploits&lt;/code&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Exploits can be customised &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Terminology in Metasploit &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;Exploit&lt;/dt&gt;
&lt;dd&gt;the code which attackers or security testers could take advantage of a flaw within a system &lt;!-- raw HTML omitted --&gt;&lt;/dd&gt;
&lt;dt&gt;Payload&lt;/dt&gt;
&lt;dd&gt;The code the attacker wants to be &lt;!-- raw HTML omitted --&gt;return after successful exploits&lt;!-- raw HTML omitted --&gt; on target system (e.g., reverse shell, bind shell) for further interactions &lt;!-- raw HTML omitted --&gt;&lt;/dd&gt;
&lt;dt&gt;Shellcode&lt;/dt&gt;
&lt;dd&gt;Assembly instructions used as payload when the exploitation occurs &lt;!-- raw HTML omitted --&gt;&lt;/dd&gt;
&lt;dt&gt;Module&lt;/dt&gt;
&lt;dd&gt;Piece of software that can be used by metasploit &lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;Exploit module: to conduct attack &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Auxiliary module: to support an attack (e.g., scanning) &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Post exploitation module &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;dt&gt;Listener&lt;/dt&gt;
&lt;dd&gt;component that waits connection of sorts &lt;!-- raw HTML omitted --&gt;&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;We will mainly focus on MSFconsole (which is based on command line instructions) &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Commands on msfconsole &lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;search portscan &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;use auxiliary/scanner/portscan/tcp &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;set rhosts x.x.x.x &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;run &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;Every command will follow the context left by previous commands&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h4 id=&#34;metasploit-exploitation&#34;&gt;MetaSploit Exploitation&lt;/h4&gt;
&lt;dl&gt;
&lt;dt&gt;Main tools&lt;/dt&gt;
&lt;dd&gt;&lt;ul&gt;
&lt;li&gt;msfconsole &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;msfpayload &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;msfencode &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;dt&gt;Initial basic commands&lt;/dt&gt;
&lt;dd&gt;&lt;ul&gt;
&lt;li&gt;msf&amp;gt; show exploits &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;msf&amp;gt; show auxiliary &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;msf&amp;gt; show options &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;msf&amp;gt; search &amp;lt;string&amp;gt; &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;msf&amp;gt; show payloads: platform-speciﬁc pieces of code delivered to the target platform (if you are in an actual exploit, you will see only payloads for that attack) &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Meterpreter&lt;/p&gt;
&lt;p&gt;After the exploitation, meterpreter used as a payload for further interaction &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;It is a special shell with additional commands &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;screenshot &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;sysinfo &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;shell &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;killav &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;exploitation-example&#34;&gt;Exploitation example&lt;/h4&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Initial reconnaissance phase&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo nmap -O -vv 172.17.0.2
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-05-23_23-36-30_screenshot.png&#34; width=&#34;700px&#34;/&gt;
&lt;/figure&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;vsftpd&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;search vsftpd exploits module &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-05-23_23-37-03_screenshot.png&#34; width=&#34;700px&#34;/&gt;
&lt;/figure&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ol&gt;
&lt;li&gt;show options &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-05-23_23-38-29_screenshot.png&#34; width=&#34;700px&#34;/&gt;
&lt;/figure&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;set rhost and run &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-05-23_23-39-34_screenshot.png&#34; width=&#34;700px&#34;/&gt;
&lt;/figure&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Exploitation procedures&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Reconnaissance phase (nmap) for target system information (OS version, opened port status) &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Search and grep exploits and auxiliary modules &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Select payload for further interactions (reverse shell) &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Fill the options for modules and payload &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Run the exploits &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Interact with shells &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>SCT_Topic_5_Professional_Reporting_of_Security_Testing_Findings</title>
        <link>https://ginkgo.org.cn/posts/sct_topic_5_professional_reporting_of_security_testing_findings/</link>
        <pubDate>Sun, 22 May 2022 00:00:00 +0000</pubDate>
        
        <guid>https://ginkgo.org.cn/posts/sct_topic_5_professional_reporting_of_security_testing_findings/</guid>
        <description>&lt;h2 id=&#34;sct-topic-5-professional-reporting-of-security-testing-findings&#34;&gt;SCT Topic 5: Professional Reporting of Security Testing Findings&lt;/h2&gt;
&lt;h3 id=&#34;taxonomy-of-security-testing-activities&#34;&gt;Taxonomy of security testing activities&lt;/h3&gt;
&lt;p&gt;This part actually overlap with what we talked about in &lt;a class=&#34;link&#34; href=&#34;https://ginkgo.org.cn/posts/sct_topic_1_introduction_to_security_testing/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;SCT Topic 1&lt;/a&gt;, you can refer to there for more details. &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h4 id=&#34;vulnerability-assessment&#34;&gt;Vulnerability assessment&lt;/h4&gt;
&lt;p&gt;Vulnerability assessment (VA) aims to execute the tools to identify vulnerabilities in systems and software. &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;To be notice, VA just use the tools and make report and comments based on the result, &lt;code&gt;WITHOUT&lt;/code&gt; any human-driven inspection and further interaction. &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;And professional security testers need to use both free and paid tools, because we have to assume attackers also use all tools to scan for vulnerabilities. &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h4 id=&#34;penetration-testing&#34;&gt;Penetration testing&lt;/h4&gt;
&lt;p&gt;Penetration Testing (PT) simulate the attackers&amp;rsquo; behaviours and try to &amp;ldquo;penetrate&amp;rdquo; into a computer ssytem. &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Pre-engagemnt interactions &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Intelligence gathering &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Threat modelling &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Vulnerability analysis &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Exploitation &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Post exploitation &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Reporting &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;red-teaming&#34;&gt;Red Teaming&lt;/h4&gt;
&lt;p&gt;Red teaming aims to emulate &lt;code&gt;Tactics, Techniques and Procedures (TTPs)&lt;/code&gt; of adversaries in a more realistic way. &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;Red Team&lt;/dt&gt;
&lt;dd&gt;&lt;ul&gt;
&lt;li&gt;simulate attackers &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;hired security testers &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;dt&gt;Blue Team&lt;/dt&gt;
&lt;dd&gt;&lt;ul&gt;
&lt;li&gt;real-world defenders &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;not informed the attacks in advance &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Differences Between PT and RT&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Penetration testing&lt;/th&gt;
&lt;th&gt;Red teaming&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Security assessment&lt;/td&gt;
&lt;td&gt;Methodical&lt;/td&gt;
&lt;td&gt;Flexible&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Restricted scope&lt;/td&gt;
&lt;td&gt;No rules (without being illegal)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Engagement of 1 - 2 weeks&lt;/td&gt;
&lt;td&gt;Engagement of between 2 weeks and 6 months&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Scope&lt;/td&gt;
&lt;td&gt;Generally announced&lt;/td&gt;
&lt;td&gt;No announcement&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;identifies vulnerabilities&lt;/td&gt;
&lt;td&gt;Test Blue team on programs, policies, tools and skills&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Red teaming estimate the organisation&amp;rsquo;s with two metrics: &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Time To Detect (TTD) &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Time to Mitigate (TTM) &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;professional-reporting-of-results&#34;&gt;Professional reporting of results&lt;/h3&gt;
&lt;p&gt;Three fundamental objectives of a professional report: &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Describe the findings &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Rate the vulnerabilities &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Explain how the results will affect the customer in the real world &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Possible sections in professional report &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Introduction/Overview &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Scope and objectives &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Deviations from the Statement of Work &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Methodology &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Significant assessment findings (critical findings) &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Positive observations &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;findings summary &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Detailed summary &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Appendix &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Essentails details should be elaborated in a report: &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Risk, exploitability and impact values
: -   Risk, how critical a certain vulnerability is &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Exploitability, feasibility of taking advantage of a vulnerability &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Impact, estimation of the damage &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Category
: -   define the category a vulnerability belongs to &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;e.g., data exposure, access control, validation &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Location
: -   The specific location of the vulnerability within the target system &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Description
: -   Detailed description, including code examples on how to exploit it and the damage could be done &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Steps to replicate
: -   Pick the easiest one to replicate the exploitation of vulnerability &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Recommendation
: -   Suggestion about how the client could remediate the vulnerability &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;May include patching guides, temporary hotfixes, or rethinking of system architecture &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;suggestions-for-reporting&#34;&gt;Suggestions for reporting&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Don&amp;rsquo;t show automatically generated report to client &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Rate the vulnerabilities properly (refer to the CIA) &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Separate theoretical v.s. real findings &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Make sure vulnerabilities are real &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Reproducibility steps is important &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Remediations and solutions are important &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Standardise all templates &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>SCT Topic 1 Introduction to Security Testing</title>
        <link>https://ginkgo.org.cn/posts/sct_topic_1_introduction_to_security_testing/</link>
        <pubDate>Fri, 20 May 2022 00:00:00 +0000</pubDate>
        
        <guid>https://ginkgo.org.cn/posts/sct_topic_1_introduction_to_security_testing/</guid>
        <description>&lt;h2 id=&#34;sct-topic-1-introduction-to-security-testing&#34;&gt;SCT Topic 1 Introduction to Security Testing&lt;/h2&gt;
&lt;h3 id=&#34;what-is-security-testing-什么是安全测试&#34;&gt;What is Security Testing? 什么是安全测试&lt;/h3&gt;
&lt;p&gt;安全测试是一个很广泛的概念，我们可以列举几个典型的活动： &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Security Audit 安全审计 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Vulnerability Assessment 漏洞评估 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Penetration Testing 渗透测试 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Red Teaming 红队测试 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Ethical hacking 有道德的黑客攻击 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在这周的topic中我们会具体展开介绍每一个活动所对应的细节 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;在此之前，我们可以先对安全测试下一个定义： &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Security Testing is the process to reveal flaws in a system in terms of Confidentiality, Integrity, Availability (CIA).
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;安全测试就是一个揭露系统在保密性，完整性和可用性（CIA）方面的缺陷的过程
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;CIA也是所有安全话题中最重要的三要素： &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Confidentiality 保密性: 限制没有授权的用户访问资源 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Integrity 完整性：限制没有授权的用户修改资源 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Availability 可用性: 保证资源随时可用 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;然后我们再总结黑客的攻击归为三种： &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Exploit the configuration done by the system administrator 修改管理员级别的系统配置 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Exploit how the users use the system/service 利用用户对系统进行操作 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Exploit software/hardware vulnerabilities 利用软硬件的漏洞 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;penetration-testing-渗透测试&#34;&gt;Penetration Testing 渗透测试&lt;/h3&gt;
&lt;p&gt;Penetration Testing (PT) 渗透测试通过多种漏洞测试工具来模拟真实的攻击手段来尝试渗透计算机系统的活动。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;http://www.pentest-standard.org/index.php/Main_Page&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Penetration Testing Execution Standard (PTES)&lt;/a&gt; 列举了渗透测试的步骤，但这些步骤也并不固定 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Pre-engagement Interactions 预交互 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Intelligence Gathering 情报收集 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Threat Modeling 威胁建模 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Vulnerability Analysis 漏洞分析 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Exploitation 漏洞利用 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Post Exploitation 后漏洞利用 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;Reporting 报告 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;具体每一个环节大家可以根据上面的链接查看文档，这里需要需要强调的就是最后的报告环节，这也是很能反应专业性的地方，能清楚描述整一个渗透测试，对于后续客户的理解，采取措施是非常重要的（就是为了这份报告，才进行的这个渗透测试）。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h3 id=&#34;security-audit&#34;&gt;Security Audit&lt;/h3&gt;
&lt;p&gt;安全审计，主要是为了检查企业的安全是否满足标准（ISO 27000) 以及资格证书而进行的，我们在安全管理课程中已经看过了，对于中小企业的安全资格证书检查是非常重要，减少一些基础的漏洞可以帮助企业避免很多的问题，个人认为安全审计随着国内的安全意识的提高以及规范化的提高也会逐渐普及以及形成产业进一步增加安全就业。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h3 id=&#34;vulnerability-analysis--va--漏洞分析&#34;&gt;Vulnerability Analysis (VA) 漏洞分析&lt;/h3&gt;
&lt;p&gt;Vulnerability Analysis (VA) 漏洞分析是单纯地利用工具进行扫描系统和软件中的漏洞的活动，在进行扫描的时候，必须要同时使用开源和商业的工具，因为我们无法保证黑客不使用这些商业工具。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;同时与渗透测试不同的是，漏洞分析只是单纯的扫描工具使用，而不涉及任何的交互 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h3 id=&#34;red-teaming--rt--红队测试&#34;&gt;Red Teaming (RT) 红队测试&lt;/h3&gt;
&lt;p&gt;红队测试也是安全测试员进行模拟攻击来测试目标系统的安全性 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;这里有两个计量的单位： &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Time To Detect (TTD) 检测响应时间： &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;指的是目标系统通过杀毒软件或者IDS扫描到本次入侵或者病毒所需要的时间，具体的表现为安全分析师第一次记录成报告的时间 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Time To Mitigate (TTM) 解决响应时间： &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;指的是目标企业的安全工程师多久能组织本次攻击 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;也反应了其他的一些内容： &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;安全团队与IT部门的配合是否高效 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;员工是否陷入了恐慌（安全培训） &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;但是要注意将渗透测试与红队测试区分开 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;Red Team 红队&lt;/dt&gt;
&lt;dd&gt;&lt;ol&gt;
&lt;li&gt;攻击者（模拟） &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;模仿攻击的一整套流程 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;不告知蓝队何时用何种方法进行进攻 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/dd&gt;
&lt;dt&gt;Blue Team 蓝队&lt;/dt&gt;
&lt;dd&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;企业中的防御者 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;不会被告知有红队的存在（但是在渗透测试中，双方会进行合作） &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Pennetration Tests&lt;/th&gt;
&lt;th&gt;Red Teaming&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Security Assessment&lt;/td&gt;
&lt;td&gt;Methodical&lt;/td&gt;
&lt;td&gt;Flexible&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Scope&lt;/td&gt;
&lt;td&gt;严格的目标&lt;/td&gt;
&lt;td&gt;没有具体的规则&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;1-2周的流程&lt;/td&gt;
&lt;td&gt;2-6个月的参与&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;告知对方企业的蓝队&lt;/td&gt;
&lt;td&gt;不通知对方的蓝队&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;识别漏洞&lt;/td&gt;
&lt;td&gt;测试蓝队在程序，安全政策，防御工具以及技能&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;用来测试TTD与TTM的水平&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;必须在合法的范围下进行&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
        </item>
        <item>
        <title>SCT Topic 4: Web Attacks - Bypassing client-side authentication and others</title>
        <link>https://ginkgo.org.cn/posts/sct_topic_4_web_attacks_bypassing_client-side_authentication_and_others/</link>
        <pubDate>Fri, 20 May 2022 00:00:00 +0000</pubDate>
        
        <guid>https://ginkgo.org.cn/posts/sct_topic_4_web_attacks_bypassing_client-side_authentication_and_others/</guid>
        <description>&lt;h2 id=&#34;sct-topic-4-web-attacks-bypassing-client-side-authentication-and-others&#34;&gt;SCT Topic 4: Web Attacks - Bypassing client-side authentication and others&lt;/h2&gt;
&lt;h3 id=&#34;bypassing-client-side-controls-客户端检查绕过&#34;&gt;Bypassing client-Side Controls 客户端检查绕过&lt;/h3&gt;
&lt;p&gt;绕过客户端的检查主要是针对两个方面， &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;页面HTML代码 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;HTTP请求 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;客户端的检查一般来说都能被轻松的绕过，主要的防御手段还是服务器端需要进行严格的输入净化，但是设置合理的客户端检查可以帮助正常的用户减少麻烦 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;我们直接来看具体的种类和例子吧 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;URL parameters URL参数 &lt;!-- raw HTML omitted --&gt;
URL后面接的GET参数可以被轻易修改 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;http://example.com/shop/?prod=3&amp;amp;price=32&amp;amp;currency=USD
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hidden form fields 隐藏的表格内容 &lt;!-- raw HTML omitted --&gt;
有些网页会有隐藏的表单内容用于后续的提交，这些表格可以轻易被浏览器的开发工具所修改，因此服务器端也得对这部分的数据做严格的审核 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Please enter the required quantity:&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;form&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;method&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;post&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;action&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Shop.aspx?prod=1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Product: xPhone Ultimate &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;br&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt; Price: 449 &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;br&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(Maximum quantity is 50)&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;br&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;hidden&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;price&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;449&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;submit&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Buy&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;form&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Length limits 长度限制 &lt;!-- raw HTML omitted --&gt;
长度的限制也可以轻易被修改 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Please enter the required quantity:&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;form&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;method&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;post&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;action&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Shop.aspx?prod=1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Product: iPhone Ultimate &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;br&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Price: 449 &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;br&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Quantity: &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;text&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;quantity&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;maxlength&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(Maximum quantity is 50) &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;br&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;”hidden”&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;”price”&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;”449”&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;”submit”&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;”Buy”&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;form&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Disabled elements 不可修改的元素 &lt;!-- raw HTML omitted --&gt;
开发者工具修改 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Please enter the required quantity:&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;form&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;method&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;post&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;action&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Shop.aspx?prod=1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Product: iPhone Ultimate &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;br&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Price: &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;text&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;price&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;disabled&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;449&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Quantity: &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;text&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;quantity&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;(Maximum quantity is 50) &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;br&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;submit&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Buy&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;form&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Script-based validation &lt;!-- raw HTML omitted --&gt;
前端的JS脚本检查，可以通过debugger，Burp抓住请求后直接修改，chrome可以直接修改 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;form&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;method&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;post&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;action&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Shop.aspx?prod=2&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;onsubmit&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;return validateForm(this)&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Product: Samsung Multiverse &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;br&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Price: 399 &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;br&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Quantity: &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;text&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;quantity&amp;#34;&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;Maximum&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;quantity&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;br&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;submit&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Buy&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;form&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;validateForm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;theForm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;isInteger&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sr&#34;&gt;/^\d+$/&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;valid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;isInteger&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;quantity&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;quantity&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;quantity&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;valid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;alert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Please enter a valid quantity&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;valid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Referer header &lt;!-- raw HTML omitted --&gt;
Burp拦截请求后可以直接修改 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;GET /auth/472/CreateUser.ashx HTTP/1.1 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Host: mdsec.net 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Referer: https://mdsec.net/auth/472/Admin.ashx
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HTTP cookies &lt;!-- raw HTML omitted --&gt;
Burp拦截请求后可以直接修改 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;POST /shop/92/Shop.aspx?prod=3 HTTP/1.1 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Host: mdsec.net 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Cookie: DiscountAgreed=25 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Content-Length: 10
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;quantity=1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;local-remote-file-inclusion--lfi-rfi--文件包含&#34;&gt;Local/Remote File Inclusion (LFI/RFI) 文件包含&lt;/h3&gt;
&lt;p&gt;详见：&lt;a class=&#34;link&#34; href=&#34;https://ginkgo.org.cn/posts/lrfi_basic/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://ginkgo.org.cn/posts/lrfi_basic/&lt;/a&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h3 id=&#34;command-injection-命令行注入&#34;&gt;Command Injection 命令行注入&lt;/h3&gt;
&lt;p&gt;命令行注入漏洞主要由黑客利用PHP中来执行系统命令的函数来执行自己的恶意代码(e.g., system(), exec(),  popen()). &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;参数通常由POST or GET参数传入 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;例如我们有一个ping.php需要传入一个GET参数来测试一个host的ping连接，但是如果我们用 &lt;code&gt;‘;’&lt;/code&gt; 拼接这个ping指令，就可以执行额外的操作 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;php&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$host&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$_GET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;host&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;system&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;ping -c 4 &amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-05-22_10-13-15_screenshot.png&#34; width=&#34;700px&#34;/&gt;
&lt;/figure&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h3 id=&#34;shellshock&#34;&gt;Shellshock&lt;/h3&gt;
&lt;p&gt;接下来我们来介绍一个很典型的命令行注入的漏洞，叫做Shellshock， &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h4 id=&#34;knowledge-prerequisites&#34;&gt;Knowledge Prerequisites&lt;/h4&gt;
&lt;p&gt;我们平时经常使用终端来进行一些文件操作，以及安装命令行工具来增强其功能。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;那么相信大家也将会经常被配置环境参数搞的头疼不已，而在shellshock中我们正是利用环境变量来注入命令行。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;首先大家一般在Linux上使用的终端都是bash，shellshock也发生在老版本的bash上面 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;接下来，我们将通过比较Bash在一般模式下的变量定义的表现，以及对比开启一个新的bash子进程之后，这些变量会有什么表现来进一步了解这些令人头疼的变量 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;普通shell变量和bash子进程中的变量 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;04/12/2018 09:26&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; seed@ubuntu:~/Seed/shellshock$ &lt;span class=&#34;nv&#34;&gt;gu&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;hacker&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;04/12/2018 09:26&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; seed@ubuntu:~/Seed/shellshock$ &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$gu&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hacker
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;04/12/2018 09:26&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; seed@ubuntu:~/Seed/shellshock$ bash &lt;span class=&#34;c1&#34;&gt;#进入子进程&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;04/12/2018 09:27&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; seed@ubuntu:~/Seed/shellshock$ &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$gu&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#无事发生&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;04/12/2018 09:27&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; seed@ubuntu:~/Seed/shellshock$ &lt;span class=&#34;nb&#34;&gt;exit&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;exit&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;04/12/2018 09:27&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; seed@ubuntu:~/Seed/shellshock$
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;结论：bash子进程没有继承普通shell的变量 &lt;code&gt;$gu&lt;/code&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;普通环境变量与bash子进程中的环境变量 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;04/12/2018 09:31&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; seed@ubuntu:~/Seed/shellshock$ &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$gu&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hacker
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;04/12/2018 09:32&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; seed@ubuntu:~/Seed/shellshock$ &lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; gu
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;04/12/2018 09:32&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; seed@ubuntu:~/Seed/shellshock$ bash
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;04/12/2018 09:32&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; seed@ubuntu:~/Seed/shellshock$ &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$gu&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#继承了环境变量&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hacker
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;04/12/2018 09:32&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; seed@ubuntu:~/Seed/shellshock$ &lt;span class=&#34;nb&#34;&gt;exit&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;exit&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;04/12/2018 09:32&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; seed@ubuntu:~/Seed/shellshock$
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;结论：bash子进程继承了普通shell中定义的环境变量 &lt;code&gt;$gu&lt;/code&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;普通函数变量和bash子进程中的函数变量 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;04/12/2018 09:37&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; seed@ubuntu:~/Seed/shellshock$ gu&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;gu is a hacker&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;04/12/2018 09:37&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; seed@ubuntu:~/Seed/shellshock$ gu
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gu is a hacker
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;04/12/2018 09:38&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; seed@ubuntu:~/Seed/shellshock$ bash
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;04/12/2018 09:38&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; seed@ubuntu:~/Seed/shellshock$ gu &lt;span class=&#34;c1&#34;&gt;# gu未被定义&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gu: &lt;span class=&#34;nb&#34;&gt;command&lt;/span&gt; not found
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;04/12/2018 09:38&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; seed@ubuntu:~/Seed/shellshock$ &lt;span class=&#34;nb&#34;&gt;exit&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;exit&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;04/12/2018 09:38&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; seed@ubuntu:~/Seed/shellshock$
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;结论：bash子进程没有继承函数变量 &lt;code&gt;gu&lt;/code&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;函数环境变量和bash子进程中的函数环境变量 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;04/12/2018 09:41&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; seed@ubuntu:~/Seed/shellshock$ gu
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gu is a hacker
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;04/12/2018 09:41&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; seed@ubuntu:~/Seed/shellshock$ &lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; -f gu
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;04/12/2018 09:41&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; seed@ubuntu:~/Seed/shellshock$ bash
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;04/12/2018 09:42&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; seed@ubuntu:~/Seed/shellshock$ gu &lt;span class=&#34;c1&#34;&gt;# inherit the environment variables gu&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gu is a hacker
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;04/12/2018 09:42&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; seed@ubuntu:~/Seed/shellshock$ &lt;span class=&#34;nb&#34;&gt;exit&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;exit&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;04/12/2018 09:42&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; seed@ubuntu:~/Seed/shellshock$ env &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep gu
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;gu&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;hacker
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;gu&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;  &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;gu is a hacker&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;04/12/2018 09:42&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; seed@ubuntu:~/Seed/shellshock$
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;结论：bash子进程继承了函数环境变量 &lt;code&gt;gu&lt;/code&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h4 id=&#34;shellshock发生的原因&#34;&gt;shellshock发生的原因&lt;/h4&gt;
&lt;p&gt;接下来我们来尝试一点不一样的 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;普通函数变量再尝试 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;04/12/2018 09:42&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; seed@ubuntu:~/Seed/shellshock$ &lt;span class=&#34;nv&#34;&gt;ailx10&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;() {  echo &amp;#34;ailx10 is a hacker&amp;#34;;}&amp;#39;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 普通函数变量&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;04/12/2018 09:48&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; seed@ubuntu:~/Seed/shellshock$ &lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; -nf gu &lt;span class=&#34;c1&#34;&gt;# 删除环境函数变量gu&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;04/12/2018 09:48&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; seed@ubuntu:~/Seed/shellshock$ &lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; -n gu &lt;span class=&#34;c1&#34;&gt;# 删除环境变量gu&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;04/12/2018 09:49&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; seed@ubuntu:~/Seed/shellshock$ &lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; -f ailx10 &lt;span class=&#34;c1&#34;&gt;# 保存环境函数变量，失败&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;bash: export: ailx10: not a &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;04/12/2018 09:49&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; seed@ubuntu:~/Seed/shellshock$ &lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; ailx10 &lt;span class=&#34;c1&#34;&gt;# 保存环境变量，成功&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;04/12/2018 09:49&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; seed@ubuntu:~/Seed/shellshock$ bash &lt;span class=&#34;c1&#34;&gt;# 进入Bash子进程&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;04/12/2018 09:50&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; seed@ubuntu:~/Seed/shellshock$ ailx10 &lt;span class=&#34;c1&#34;&gt;#ailx10 函数被继承&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ailx10 is a hacker
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;04/12/2018 09:50&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; seed@ubuntu:~/Seed/shellshock$ env &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep ailx10 &lt;span class=&#34;c1&#34;&gt;# Pattern &amp;#34;(){ :; }&amp;#34; 被当作环境变量保存了（因此能够被进程）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;ailx10&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;  &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;ailx10 is a hacker&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;04/12/2018 09:50&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; seed@ubuntu:~/Seed/shellshock$ &lt;span class=&#34;nb&#34;&gt;exit&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;exit&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;04/12/2018 09:50&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; seed@ubuntu:~/Seed/shellshock$ env &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep ailx10
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;ailx10&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;  &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;ailx10 is a hacker&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;04/12/2018 09:50&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; seed@ubuntu:~/Seed/shellshock$
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;结论：因为我们再定义函数 &lt;code&gt;ailx10&lt;/code&gt; 的时候，用了 &lt;code&gt;(){ :; }&lt;/code&gt; ，所以无法被识别为环境函数变量，被当作是环境变量保存了 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;() { :; }再尝试 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;04/12/2018 09:57&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; seed@ubuntu:~/Seed/shellshock$ &lt;span class=&#34;nv&#34;&gt;ailx10&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;() { :; };/bin/ls&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;04/12/2018 09:58&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; seed@ubuntu:~/Seed/shellshock$ &lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; ailx10 &lt;span class=&#34;c1&#34;&gt;# 当作环境变量保存&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;04/12/2018 09:58&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; seed@ubuntu:~/Seed/shellshock$ bash &lt;span class=&#34;c1&#34;&gt;# /bin/ls 作为环境变量却被执行了&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl-7.20.0     myls      myls.c      myprog.cgi.1  readme.txt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl-7.20.0.tar.gz  myls-notroot  myprog.cgi  myprog.cgi.2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;04/12/2018 09:58&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; seed@ubuntu:~/Seed/shellshock$ &lt;span class=&#34;nb&#34;&gt;exit&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;exit&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;04/12/2018 09:58&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; seed@ubuntu:~/Seed/shellshock$
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;至此，我们可以总结 Shellshock 漏洞产生的原因 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;定义环境函数变量的时候，Bash错误的识别了 &lt;code&gt;() { :; }&lt;/code&gt; 这种格式，被当作的是环境变量保存了 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;调用新的bash子进程 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;环境变量被继承，并执行，导致恶意代码被执行 &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;验证Shellshock的方法&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-05-22_11-40-34_screenshot.png&#34; width=&#34;700px&#34;/&gt;
&lt;/figure&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;env &lt;span class=&#34;nv&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;() { :;}; echo vulnerable&amp;#39;&lt;/span&gt; bash -c &lt;span class=&#34;s2&#34;&gt;&amp;#34;echo this is a test&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;第一部分会被Bash解析为一个环境变量进行保存 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;第二部分为需要执行的恶意指令 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;第三部分为调用一个bash子进程，同时会继承环境变量并执行恶意指令， &lt;code&gt;-c&lt;/code&gt; 用来在新的bash下执行代码以表明新bash子进程启动成功 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;04/12/2018 10:14&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; seed@ubuntu:~/Seed/shellshock$ env &lt;span class=&#34;nv&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;() { :;}; echo vulnerable&amp;#39;&lt;/span&gt; bash -c &lt;span class=&#34;s2&#34;&gt;&amp;#34;echo this is a test&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;vulnerable
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;this is a &lt;span class=&#34;nb&#34;&gt;test&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;04/12/2018 10:14&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; seed@ubuntu:~/Seed/shellshock$ 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;04/12/2018 10:14&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; seed@ubuntu:~/Seed/shellshock$ 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;04/12/2018 10:14&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; seed@ubuntu:~/Seed/shellshock$ env &lt;span class=&#34;nv&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;() { :;}; echo vulnerable&amp;#39;&lt;/span&gt; bash -c :
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;vulnerable
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;04/12/2018 10:14&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; seed@ubuntu:~/Seed/shellshock$
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;需要注意的是 &lt;code&gt;&#39;:&#39;&lt;/code&gt; 什么也不做是一个空命令，相当于 &lt;code&gt;::&lt;/code&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; true&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; yes&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;yes
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; :&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; yes&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;yes
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;shellshock-的危害&#34;&gt;shellshock 的危害&lt;/h4&gt;
&lt;p&gt;可以被用来反弹shell？ &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-05-22_11-52-01_screenshot.png&#34; width=&#34;700px&#34;/&gt;
&lt;/figure&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h3 id=&#34;web应用中的条件竞争漏洞&#34;&gt;Web应用中的条件竞争漏洞&lt;/h3&gt;
&lt;p&gt;条件竞争主要就是在于多线程的访问并修改服务端的资源，因为没有控制好多个线程之间的执行次序，没有很好的上锁，导致他们访问的数据不同步，从而导致最后的数据出现错误。 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;这个我们在做CTF的时候应该也有遇到过，比如通过&lt;a class=&#34;link&#34; href=&#34;https://ginkgo.org.cn/posts/file_upload_ggctf_upload/#%E6%9D%A1%E4%BB%B6%E7%AB%9E%E4%BA%89&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;条件竞争绕过的文件上传漏洞&lt;/a&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h3 id=&#34;appendix&#34;&gt;Appendix&lt;/h3&gt;
&lt;h4 id=&#34;env&#34;&gt;env&lt;/h4&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://linux.die.net/man/1/env&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://linux.die.net/man/1/env&lt;/a&gt; &lt;!-- raw HTML omitted --&gt;
Name &lt;!-- raw HTML omitted --&gt;
env - run a program in a modified environment &lt;!-- raw HTML omitted --&gt;
Synopsis &lt;!-- raw HTML omitted --&gt;
env [OPTION]&amp;hellip; [-] [NAME=VALUE]&amp;hellip; [COMMAND [ARG]&amp;hellip;] &lt;!-- raw HTML omitted --&gt;
Description &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Set each NAME to VALUE in the environment and run COMMAND. &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;-i, &amp;ndash;ignore-environment &lt;!-- raw HTML omitted --&gt;
start with an empty environment &lt;!-- raw HTML omitted --&gt;
-0, &amp;ndash;null &lt;!-- raw HTML omitted --&gt;
end each output line with 0 byte rather than newline &lt;!-- raw HTML omitted --&gt;
-u, &amp;ndash;unset=NAME &lt;!-- raw HTML omitted --&gt;
remove variable from the environment &lt;!-- raw HTML omitted --&gt;
&amp;ndash;help &lt;!-- raw HTML omitted --&gt;
display this help and exit &lt;!-- raw HTML omitted --&gt;
&amp;ndash;version &lt;!-- raw HTML omitted --&gt;
output version information and exit &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;A mere - implies -i. If no COMMAND, print the resulting environment. &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h4 id=&#34;export&#34;&gt;export&lt;/h4&gt;
&lt;p&gt;NAME &lt;!-- raw HTML omitted --&gt;
export - Set export attribute for shell variables. &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;SYNOPSIS &lt;!-- raw HTML omitted --&gt;
export [-fn] [name[=value] &amp;hellip;] or export -p &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;DESCRIPTION &lt;!-- raw HTML omitted --&gt;
Set export attribute for shell variables. &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Marks each NAME for automatic export to the environment of subsequently &lt;!-- raw HTML omitted --&gt;
executed commands.  If VALUE is supplied, assign VALUE before exporting. &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Options: &lt;!-- raw HTML omitted --&gt;
-f	refer to shell functions &lt;!-- raw HTML omitted --&gt;
-n	remove the export property from each NAME &lt;!-- raw HTML omitted --&gt;
-p	display a list of all exported variables and functions &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;An argument of `&amp;ndash;&amp;rsquo; disables further option processing. &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Exit Status: &lt;!-- raw HTML omitted --&gt;
Returns success unless an invalid option is given or NAME is invalid. &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;SEE ALSO &lt;!-- raw HTML omitted --&gt;
bash(1) &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;IMPLEMENTATION &lt;!-- raw HTML omitted --&gt;
GNU bash, version 5.0.17(1)-release (x86_64-redhat-linux-gnu) &lt;!-- raw HTML omitted --&gt;
Copyright (C) 2019 Free Software Foundation, Inc. &lt;!-- raw HTML omitted --&gt;
License GPLv3+: GNU GPL version 3 or later &lt;a class=&#34;link&#34; href=&#34;http://gnu.org/licenses/gpl.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://gnu.org/licenses/gpl.html&lt;/a&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h3 id=&#34;reference&#34;&gt;Reference&lt;/h3&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.owasp.org/images/1/1b/Shellshock_-_Tudor_Enache.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;OWASP:Shellshock&lt;/a&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://zhuanlan.zhihu.com/p/35579956&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;什么是ShellShock攻击？&lt;/a&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>SCT Topic 8: Password Cracking</title>
        <link>https://ginkgo.org.cn/posts/password_cracking/</link>
        <pubDate>Fri, 18 Mar 2022 00:00:00 +0000</pubDate>
        
        <guid>https://ginkgo.org.cn/posts/password_cracking/</guid>
        <description>&lt;h2 id=&#34;sct-topic-8-password-cracking&#34;&gt;SCT Topic 8: Password Cracking&lt;/h2&gt;
&lt;h3 id=&#34;case-study-adobe-password-leak&#34;&gt;Case Study: Adobe Password Leak&lt;/h3&gt;
&lt;p&gt;If you are familiar with how online service store users&amp;rsquo;s password, let me ask you:&lt;/p&gt;
&lt;p&gt;How Should You Do?&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-03-19_09-43-18_screenshot.png&#34; width=&#34;700px&#34;/&gt;
&lt;/figure&gt;

&lt;p&gt;Yes, we will use &lt;code&gt;hash algorithm&lt;/code&gt;, &lt;code&gt;salt&lt;/code&gt; and store the hashed password and salt, which actively avoid the exposion of plaintext password and &lt;!-- raw HTML omitted --&gt;brute force&lt;!-- raw HTML omitted --&gt;.&lt;/p&gt;
&lt;p&gt;But how Adobe Did It?&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-03-19_09-46-25_screenshot.png&#34; width=&#34;700px&#34;/&gt;
&lt;/figure&gt;

&lt;p&gt;What were the consequences?&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;If you get the &lt;code&gt;master key&lt;/code&gt;, literally you own all &amp;ldquo;encrypted passwords&amp;rdquo;&lt;/li&gt;
&lt;li&gt;If two users choose same password, their encrypted ciphertext are same, consequently, &lt;code&gt;frequently analysis&lt;/code&gt; would help hacker to find out the details of encryption process.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For more details, please refer to this article: &lt;a class=&#34;link&#34; href=&#34;https://nakedsecurity.sophos.com/2013/11/04/anatomy-of-a-password-disaster-adobes-giant-sized-cryptographic-blunder/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Anatomy of a password disaster – Adobe’s giant-sized cryptographic blunder&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;cryptanalysis-basics&#34;&gt;Cryptanalysis basics&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;Cryptanalysis&lt;/dt&gt;
&lt;dd&gt;The study of techniques to reveal what cryptography is attempting to hide or protect.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;In other words, break the cryptographyic algorithms without knowing the key.&lt;/p&gt;
&lt;p&gt;Cryptanalysis are based on:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The nature of the cryptographic algorithm&lt;/li&gt;
&lt;li&gt;the key&lt;/li&gt;
&lt;li&gt;some knowledge on the text, such as language(common words), format or encoding (script, image alway begin with some same pattern),&lt;/li&gt;
&lt;li&gt;a section with both plaintext and encrypted text&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;brute-force-attacks&#34;&gt;Brute-force attacks&lt;/h4&gt;
&lt;dl&gt;
&lt;dt&gt;Brute-force attack&lt;/dt&gt;
&lt;dd&gt;Aim to decrypt an encrypted text by exhaustively &lt;code&gt;trying all possible&lt;/code&gt; secret keys until you obtain a meaningful plaintext&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;On average, you need to try at least &lt;code&gt;half of all the possible&lt;/code&gt; keys to be successful&lt;/p&gt;
&lt;p&gt;For example, to brute force a 4-digit password, the number of possibilities is 10^4 = 10000, therefore, on average, a brute-force attack in this scenario will succeed after 5000 attempts. If 1 attempt cost 1s, it needs at least 1h24min to finish this work.&lt;/p&gt;
&lt;h4 id=&#34;dictionary-attacks&#34;&gt;Dictionary attacks&lt;/h4&gt;
&lt;p&gt;4-digit password needs one hour and half? Forget about it, let&amp;rsquo;s to try something not so naive.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s first define the term &amp;ldquo;password&amp;rdquo; as a user-defined encrypted secret key.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;Passowrd dictionary attacks&lt;/dt&gt;
&lt;dd&gt;Use a &amp;ldquo;dictionary&amp;rdquo; of possbile words (based on an attacker-defined alphabet) to make exploitation attempts, including English words, user&amp;rsquo;s private information and common passwords.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Common dictionaries for attacks include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Words and meaningful fragments of words combination for a certain language&lt;/li&gt;
&lt;li&gt;Personal information (e.g., obtained from OSINT or social engineering)&lt;/li&gt;
&lt;li&gt;Lists of names, locations, dates, companies, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Therefore, if the attackers use dictionary attack, the &lt;code&gt;password length&lt;/code&gt; does not provide too much help on password robustness.&lt;/p&gt;
&lt;h4 id=&#34;password-robustness&#34;&gt;Password robustness&lt;/h4&gt;
&lt;p&gt;There are four main elements to determine the security of a password&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;Number of symbols in the password&lt;/dt&gt;
&lt;dd&gt;As we mentioned before, 4-digit locker would require on average 10^4/2 seconds, or almost 1.5 hours to brute force, the longer password, the longer time to brute force.&lt;/dd&gt;
&lt;dt&gt;Number of possibilities for each position&lt;/dt&gt;
&lt;dd&gt;We continue use previous example, if we expand the types of symbols to alphabet and number, the possibilities expand to 36*36*36 for brute force, which requires much more time than 1.5 hours.&lt;/dd&gt;
&lt;dt&gt;Time required for each attempt&lt;/dt&gt;
&lt;dd&gt;Based on my experience, some online service will delay the login attempt to expand the time of brute force, which may also help to defend the attack like DDoS.&lt;/dd&gt;
&lt;dt&gt;Are there easier alternatives&lt;/dt&gt;
&lt;dd&gt;Remember we metioned in &lt;em&gt;Social Engineering&lt;/em&gt;: &amp;ldquo;The easiest way to get the information you want is always by asking the victims themselves&amp;rdquo;?
&lt;p&gt;There are always more than one way to get the answer of a question, so does cryptanalysis, you can even physically break the lock :)&lt;/p&gt;
&lt;p&gt;Some common alternatives:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;finding write-down notes in officers&lt;/li&gt;
&lt;li&gt;shoulder-surfing, i.e., looking over someone&amp;rsquo;s shoulder when they&amp;rsquo;re typing their passwords&lt;/li&gt;
&lt;li&gt;physical break-in&lt;/li&gt;
&lt;li&gt;physically stealing passwords lists or logbooks&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;h3 id=&#34;cryptographic-hash-functions&#34;&gt;Cryptographic hash functions&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;Hash function&lt;/dt&gt;
&lt;dd&gt;A function that maps input data of &lt;code&gt;arbitrary size&lt;/code&gt; to &lt;code&gt;fixed-size&lt;/code&gt; output values called &lt;code&gt;hashes&lt;/code&gt;.&lt;/dd&gt;
&lt;dt&gt;Crytographic hash functions (CHF)&lt;/dt&gt;
&lt;dd&gt;are hash functions more suitable for information security applications which contains ideal following properties:
&lt;ol&gt;
&lt;li&gt;deterministic: given message M, its hash H(M) is &lt;!-- raw HTML omitted --&gt;always&lt;!-- raw HTML omitted --&gt; the same&lt;/li&gt;
&lt;li&gt;quick to compute&lt;/li&gt;
&lt;li&gt;unfeasible to generate message M that has a specific hash value H (hard to find alternative message M&#39;)&lt;/li&gt;
&lt;li&gt;unfeasible to find messages M1 and M2 such that H(M1) = H(M2) (hard to find a collision)&lt;/li&gt;
&lt;li&gt;avalanche effect: a small change in message M leads to siginificant change to the hash value.&lt;/li&gt;
&lt;/ol&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Usage of CHF includes MACs (Message Authentication Codes), digital signatures and authentications.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s use an example for better understanding of CHF&lt;/p&gt;
&lt;p&gt;Left hand column is the input, after cryptographic hash function, we get the output, we called &lt;code&gt;Digest&lt;/code&gt; here.&lt;/p&gt;
&lt;p&gt;We can observe that, a single character change of input text, the digest would be very different from previous one.&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-03-19_14-44-36_screenshot.png&#34; width=&#34;700px&#34;/&gt;
&lt;/figure&gt;

&lt;p&gt;As you can easily guess, there are many problems and attacks which threat the CHF:&lt;/p&gt;
&lt;h4 id=&#34;the-birthday-problem--or-the-birthday-paradox&#34;&gt;The birthday problem (or the birthday paradox)&lt;/h4&gt;
&lt;p&gt;Let me ask you a classic question, how many people you need in a single room, which makes the probability that at least two person share a birthday to be 50%?&lt;/p&gt;
&lt;p&gt;You only need 23 people to raise probability to 50 per cent.&lt;/p&gt;
&lt;p&gt;Prove:
The goal is to compute P(A), the probability that at least two people in the room have same birthday.&lt;/p&gt;
&lt;p&gt;However, it is simpler to calculate the reverse one, P(A&amp;rsquo;), the probability that &lt;code&gt;NO&lt;/code&gt; two people in the room have the same birthday.&lt;/p&gt;
&lt;p&gt;To calculate P(A&amp;rsquo;), the event is that &lt;code&gt;person 2&lt;/code&gt; does not have the same birthday as &lt;code&gt;person 1&lt;/code&gt;, and that persona 3 does not have the same birthday as either person 1 or person 2, and so on, and finally that person 23 does not have the same birthday as any of persons 1 through 22.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s number this event as Event 1 to Event 23&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s calculate the product of the probability of these events:&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-03-19_15-31-52_screenshot.png&#34; width=&#34;400px&#34;/&gt;
&lt;/figure&gt;

&lt;p&gt;Evaluating equation with (23) gives P(A&amp;rsquo;) ≈ 0.492703&lt;/p&gt;
&lt;p&gt;Therefore, P(A) ≈ 1 − 0.492703 = 0.507297 (50.7297%).&lt;/p&gt;
&lt;p&gt;Also, according to the &lt;a class=&#34;link&#34; href=&#34;https://en.wikipedia.org/wiki/Pigeonhole_principle&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;pigenhole principle&lt;/a&gt;, the probability reaches 100 per cent when at least 367 people are present since there are only 366 possible birthdays.&lt;/p&gt;
&lt;p&gt;Based on above knowledge, we can understand that birthday attack is based on higher likelihood of collisions found between &lt;strong&gt;random attack&lt;/strong&gt; and &lt;strong&gt;fixed degree of permutations&lt;/strong&gt;.&lt;/p&gt;
&lt;h4 id=&#34;collision-attack&#34;&gt;Collision attack&lt;/h4&gt;
&lt;p&gt;The collision attack aims to identify two inputs that generate the same hash.&lt;/p&gt;
&lt;p&gt;More formally, we assume user has password &lt;strong&gt;P&lt;/strong&gt; with hash &lt;strong&gt;H(P)&lt;/strong&gt;, an attacker may find another string Q, such that H(P) = H(Q)&lt;/p&gt;
&lt;p&gt;This is why we need CHF to have the property to make it feasible to find the collision.&lt;/p&gt;
&lt;h4 id=&#34;preimage-attack&#34;&gt;Preimage attack&lt;/h4&gt;
&lt;p&gt;The preimage attack aims to find a message that has a specific hash value&lt;/p&gt;
&lt;p&gt;More formally, an adversary &amp;ldquo;tweaks&amp;rdquo; an input message M&amp;rsquo; until H(M&amp;rsquo;)=H(M)&lt;/p&gt;
&lt;p&gt;This attack will put huge harm to the security property: Integrity, because if this kind of tweak success, we can not trust anything, even if it has been hashed.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s see an example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Message M: Give Mr John Smith a salary increase of £1,000.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This message will be digitally signed as a contract by CHF H.&lt;/p&gt;
&lt;p&gt;But the attacker finds some alternatives of messages which change their meaning of the input message, but get the same output digest as H(M)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Message M’: Award Mr Smith a raise of £2,000&lt;/li&gt;
&lt;li&gt;Message M&amp;rsquo;&amp;rsquo;: Present John Smith a bonus of £3,000&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Same signed hash value, different meaning, how powerful it is&amp;hellip;&lt;/p&gt;
&lt;h3 id=&#34;md5-collision-exercise&#34;&gt;MD5 collision exercise&lt;/h3&gt;
&lt;p&gt;When we download some files/software, many of them will provide md5 authentication, to authenticate that the integrity of the software, however, here is a &lt;a class=&#34;link&#34; href=&#34;https://www.mscs.dal.ca/~selinger/md5collision/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;exercise&lt;/a&gt; that shows MD5 can not be trusted anymore.&lt;/p&gt;
&lt;p&gt;Please review the details, I will just post something interesting here:&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s see two programs like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Program 1: if (data1 == data1) then { good_program } else { evil_program }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Program 2: if (data2 == data1) then { good_program } else { evil_program }
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The only difference between these two statements is the variable to compare, however, it has been proved by Chinese researchers that we can only change some data in the input source files, but get the same MD5 hash value, which announce the &lt;code&gt;death of MD5&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;rainbow-table-attacks&#34;&gt;Rainbow table attacks&lt;/h3&gt;
&lt;p&gt;In this section, we will see a smarter variant of dictionary attack to do the brute force, it called &lt;code&gt;pre-computed dictionary attack&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In this attack, we will pre-compute a list of hashes of dictionary words, and store in a table, which you can always easily to map the hashed text and plaintext password. If &amp;ldquo;hash-chain&amp;rdquo; functions are used to store the pre-computed hashes(to reduce the storage space), then the table is called a &lt;code&gt;rainbow table&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s use an example to introduce the terms and processes in a Rainbow Table usage.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The letter &lt;code&gt;H&lt;/code&gt; denotes a hash function.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The letters &lt;code&gt;R_i&lt;/code&gt; denote different reduction functions, which aim to store more plaintext-hashed-text chains in the table (The number and sequences of reduction functions are same in each row).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We only store two columns of data in a system: 1. The &lt;code&gt;first column&lt;/code&gt; (in green) and the &lt;code&gt;last&lt;/code&gt; (in yellow).&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-03-19_16-33-39_screenshot.png&#34; width=&#34;700px&#34;/&gt;
&lt;/figure&gt;

&lt;h4 id=&#34;how-we-utilise-the-rainbow-table-the-plaintext-of-a-given-hashed-text&#34;&gt;How we utilise the rainbow table the plaintext of a given hashed text?&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Step 0
We find the hashed text &lt;code&gt;&amp;quot;re3xes&amp;quot;&lt;/code&gt; in /etc/shadow directory of the victim, we want the plaintext of this password, and have a rainbow table which contains two columns (green and yellow).&lt;/li&gt;
&lt;/ul&gt;
&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-03-19_16-36-34_screenshot.png&#34; width=&#34;700px&#34;/&gt;
&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Step 1
We use the reduction function &lt;code&gt;R3&lt;/code&gt; on &lt;code&gt;&amp;quot;re3xes&amp;quot;&lt;/code&gt; (start from last reduction function) and see if the result &amp;ldquo;rambo&amp;rdquo; is in the last column of the rainbow table. In this example it is not.&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-03-19_16-39-37_screenshot.png&#34; width=&#34;700px&#34;/&gt;
&lt;/figure&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Step 2
Next, try two rounds of reduction function, use reductions R2 and R3 and obtain &amp;ldquo;linux23&amp;rdquo; as the result.&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-03-19_16-50-07_screenshot.png&#34; width=&#34;700px&#34;/&gt;
&lt;/figure&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Step 3
Find the match&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-03-19_16-50-29_screenshot.png&#34; width=&#34;700px&#34;/&gt;
&lt;/figure&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Step 4
Start with matched plaintext column &amp;ldquo;passwd&amp;rdquo; and do the reductions to reach plaintext which will hashed to given hashed text &amp;ldquo;re3xes&amp;rdquo;.&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-03-19_16-51-59_screenshot.png&#34; width=&#34;700px&#34;/&gt;
&lt;/figure&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;dl&gt;
&lt;dt&gt;Summary&lt;/dt&gt;
&lt;dd&gt;We assume that the given hashed text are contained in the chains of a row in the rainbow table, and use a sequence of reduction functions and hash function to see if it could reach the last column.
&lt;p&gt;If there is match, then we could locate the row of first (green) column and begin to reproduce the chains and get the plaintext.&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;https://ginkgo.org.cn/ox-hugo/2022-03-19_16-43-11_screenshot.png&#34; width=&#34;700px&#34;/&gt;
&lt;/figure&gt;

&lt;/dd&gt;
&lt;/dl&gt;
&lt;h4 id=&#34;salt&#34;&gt;Salt&lt;/h4&gt;
&lt;p&gt;Remember that I mentioned a term in first section: Salt?&lt;/p&gt;
&lt;p&gt;Rainbow table attacks and pre-computed dictionary attacks can be thwarted via the use of salt.&lt;/p&gt;
&lt;p&gt;The reason is very simple, even if you can use pre-computed table based on some common use dictionaries, but you can predict what&amp;rsquo;s the salt are used in hashing.&lt;/p&gt;
&lt;p&gt;Here are the most common mistakes in applying salt:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Using short salts:
if the salt is too short, the attacker may predict or brute-force pre-computed dictionaries with known salts.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reusing salts:
if you reuse the salt for multiple accounts, the attacker can easily find out that the plaintext passwords were the same, and use side-channel information (e.g., password hints) to corrupt multiple accounts at once.&lt;/p&gt;
&lt;p&gt;Moreover, if the attacker randomly predicted the correct salt while computing a precomputed dicionary, then all the passwords would be compromised at once.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Finally it is important to note that using a ‘salt’ is not robust enough to thwart dictionary attacks, but only the pre-computation.&lt;/p&gt;
&lt;h3 id=&#34;countermeasures-and-best-practices&#34;&gt;Countermeasures and best practices&lt;/h3&gt;
&lt;h4 id=&#34;weak-passwords&#34;&gt;Weak passwords&lt;/h4&gt;
&lt;dl&gt;
&lt;dt&gt;Default passwords&lt;/dt&gt;
&lt;dd&gt;Default provided by system vendor which should be changed at installation time
&lt;ul&gt;
&lt;li&gt;password&lt;/li&gt;
&lt;li&gt;default&lt;/li&gt;
&lt;li&gt;admin&lt;/li&gt;
&lt;li&gt;guest&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;dt&gt;Dictionary words&lt;/dt&gt;
&lt;dd&gt;Including non-English dictionaries:
&lt;ul&gt;
&lt;li&gt;chameleon&lt;/li&gt;
&lt;li&gt;RedSox&lt;/li&gt;
&lt;li&gt;sandbags&lt;/li&gt;
&lt;li&gt;bunnyhop&lt;/li&gt;
&lt;li&gt;IntenseCrabtree&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;dt&gt;Words with numbers appended&lt;/dt&gt;
&lt;dd&gt;These can be easily tested automatically by attackers with little time cost.
&lt;ul&gt;
&lt;li&gt;password1&lt;/li&gt;
&lt;li&gt;deer2000&lt;/li&gt;
&lt;li&gt;john1234&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;dt&gt;Words with simple obfuscations&lt;/dt&gt;
&lt;dd&gt;Still, it can be tested automatically with little additional effort
&lt;ul&gt;
&lt;li&gt;p@ssw0rd&lt;/li&gt;
&lt;li&gt;l33th4x0r&lt;/li&gt;
&lt;li&gt;g0ldf1sh&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;dt&gt;Doubled words&lt;/dt&gt;
&lt;dd&gt;&lt;ul&gt;
&lt;li&gt;crabcrab&lt;/li&gt;
&lt;li&gt;stopstop&lt;/li&gt;
&lt;li&gt;treetree&lt;/li&gt;
&lt;li&gt;passpass.&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;dt&gt;Common sequences from a keyboard row&lt;/dt&gt;
&lt;dd&gt;&lt;ul&gt;
&lt;li&gt;qwerty (keyboard)&lt;/li&gt;
&lt;li&gt;123456&lt;/li&gt;
&lt;li&gt;asdfgh (keyboard)&lt;/li&gt;
&lt;li&gt;fred.&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;dt&gt;Numeric sequences based on well known numbers such as&lt;/dt&gt;
&lt;dd&gt;&lt;ul&gt;
&lt;li&gt;911 (9-1-1, 9/11)&lt;/li&gt;
&lt;li&gt;314159&amp;hellip; (pi)&lt;/li&gt;
&lt;li&gt;27182&amp;hellip; (e)&lt;/li&gt;
&lt;li&gt;112 (1-1-2).&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;dt&gt;Identifiers&lt;/dt&gt;
&lt;dd&gt;&lt;ul&gt;
&lt;li&gt;jsmith123&lt;/li&gt;
&lt;li&gt;1/1/1970&lt;/li&gt;
&lt;li&gt;555–1234&lt;/li&gt;
&lt;li&gt;one&amp;rsquo;s username.&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;dt&gt;Weak passwords in non-English languages&lt;/dt&gt;
&lt;dd&gt;&lt;ul&gt;
&lt;li&gt;contraseña (Spanish)&lt;/li&gt;
&lt;li&gt;ji32k7au4a83 (encoding from Chinese).&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;dt&gt;Anything personally related to an individual&lt;/dt&gt;
&lt;dd&gt;All these can be easily tested automatically after a simple investigation of a person&amp;rsquo;s details, eg through social engineering.
&lt;ul&gt;
&lt;li&gt;license plate number&lt;/li&gt;
&lt;li&gt;social security number&lt;/li&gt;
&lt;li&gt;current or past telephone numbers&lt;/li&gt;
&lt;li&gt;student ID number&lt;/li&gt;
&lt;li&gt;current address&lt;/li&gt;
&lt;li&gt;previous addresses&lt;/li&gt;
&lt;li&gt;birthday&lt;/li&gt;
&lt;li&gt;sports team&lt;/li&gt;
&lt;li&gt;relative&amp;rsquo;s or pet&amp;rsquo;s names, nicknames, birthdays, initials, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;dt&gt;Dates&lt;/dt&gt;
&lt;dd&gt;Dates follow a pattern and make passwords weak.&lt;/dd&gt;
&lt;dt&gt;Common passwords from previous leaks&lt;/dt&gt;
&lt;dd&gt;For example, the top 10 most common passwords in a &lt;a class=&#34;link&#34; href=&#34;https://edition.cnn.com/2019/04/22/uk/most-common-passwords-scli-gbr-intl/index.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;CNN article&lt;/a&gt;:
&lt;ul&gt;
&lt;li&gt;123456&lt;/li&gt;
&lt;li&gt;123456789&lt;/li&gt;
&lt;li&gt;qwerty&lt;/li&gt;
&lt;li&gt;password&lt;/li&gt;
&lt;li&gt;111111&lt;/li&gt;
&lt;li&gt;12345678&lt;/li&gt;
&lt;li&gt;abc123&lt;/li&gt;
&lt;li&gt;1234567&lt;/li&gt;
&lt;li&gt;password1&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;12345&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;h4 id=&#34;side-channel-attacks&#34;&gt;Side-channel attacks&lt;/h4&gt;
&lt;p&gt;As its name suggest, rather than exploiting the weakness of the algorithm itself (eg. cryptanalysis and software bugs), a side-channel attack relies on information gained from the implementation of a computer system.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;timing information (eg, implement the encryption, hashing)&lt;/li&gt;
&lt;li&gt;power consumption&lt;/li&gt;
&lt;li&gt;electromagnetic leaks&lt;/li&gt;
&lt;li&gt;sound&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are familar with SQL injection, the time-based blind injection is also a side-channel attacks.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s look at the details of a &lt;code&gt;timeing attack&lt;/code&gt;:
By analyse time taken by the cryptographic algorithm implementation operation, the attacker is able to reverse engineer the input.&lt;/p&gt;
&lt;p&gt;In 2003, &lt;a class=&#34;link&#34; href=&#34;https://id.elsevier.com/as/authorization.oauth2?platSite=SD%2Fscience&amp;amp;scope=openid%20email%20profile%20els_auth_info%20els_idp_info%20els_idp_analytics_attrs%20els_sa_discover%20urn%3Acom%3Aelsevier%3Aidp%3Apolicy%3Aproduct%3Ainst_assoc&amp;amp;response_type=code&amp;amp;redirect_uri=https%3A%2F%2Fwww.sciencedirect.com%2Fuser%2Fidentity%2Flanding&amp;amp;authType=SINGLE_SIGN_IN&amp;amp;prompt=login&amp;amp;client_id=SDFE-v3&amp;amp;state=retryCounter%3D0%26csrfToken%3D8db72d04-1503-4c61-852a-86ec787771b8%26idpPolicy%3Durn%253Acom%253Aelsevier%253Aidp%253Apolicy%253Aproduct%253Ainst_assoc%26returnUrl%3D%252Fscience%252Farticle%252Fpii%252FS1389128605000125%253Fvia%25253Dihub%26prompt%3Dlogin%26cid%3Darp-7f672742-0676-47c6-9ce3-f01d2dc6f238&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Boneh and Brumley&lt;/a&gt; published a practical network-based timing attack on SSL-enabled web server, the server key was recovered in a matter of hours using this method.&lt;/p&gt;
&lt;h4 id=&#34;good-practice-around-passwords&#34;&gt;Good practice around passwords&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Do not reuse passwords
&lt;ul&gt;
&lt;li&gt;Browser&lt;/li&gt;
&lt;li&gt;KeePassX&lt;/li&gt;
&lt;li&gt;Local&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Use password managers&lt;/li&gt;
&lt;li&gt;Use Two-Factor Authentication (2FA)&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>
